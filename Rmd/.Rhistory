p3 <- p3 + geom_point(aes(color = factor(group))) +
geom_point(data = datamean, aes(y = mean, x = group), color = "brown",
size = 5, shape = 24, fill = "brown") +
geom_errorbarh(data = datamean, aes(y = mean, x = group, xmax = group + .25, xmin = group - .25, height = 0)) +
theme(legend.position = "none") +
scale_color_manual("", values = rep(c("blue", "green", "red"), each = 2)) +
geom_hline(yintercept = 5.667, linetype = 2, size = 1) +
geom_segment(aes(y = y, yend = mean, x = group, xend = group), size = 1.5, linetype = 4, color = "purple") +
annotate("text", x = 2.75, y = 7, size = 7, label = "SSW = 5.083") +
scale_x_continuous(breaks = c(1,2,3))
grid.arrange(p1, p2, p3, ncol = 3)
4
sqrt((4 + 4))
var(c(26,21,22,26,25))
var(c(18,23,21,20,17))
2.387^2
sqrt((5.5 + 5.7)/2)
sd(c(26,21,22,26,25,18,23,21,20,17))
4*5.5
4*5.7
22.8+22
44.8/8
sqrt(5.6)
46.3 - 50
-3.7/(15/10)
pnorm(-2.47)
.0068*2
source('~/.active-rstudio-document', echo=TRUE)
?rchisq
fdist <- data.frame(x = seq(0.01, 8, .01), f1 = dchisq(seq(0.01,8, .01), 1),
f2 = dchisq(seq(0.01, 8, .01), 3),
f3 = dchisq(seq(0.01, 8, .01), 6))
library(ggplot2)
library(reshape2)
fdistL <- melt(fdist, id.vars = "x", variable.name = "disttype",
value.name = "dens")
d <- ggplot(fdistL, aes(x = x, y = dens, color = disttype))
d + geom_line(size = 1.5) + theme_bw(base_size = 24) +
coord_cartesian(ylim = c(0, 8)) +
scale_color_manual("", values = c("blue", "green", "red"), labels = c("df = 1", "df = 3", "df = 6")) +
xlab("") + ylab("")
library(reshape2)
fdistL <- melt(fdist, id.vars = "x", variable.name = "disttype",
value.name = "dens")
d <- ggplot(fdistL, aes(x = x, y = dens, color = disttype))
d + geom_line(size = 1.5) + theme_bw(base_size = 24) +
coord_cartesian(ylim = c(0, 2)) +
scale_color_manual("", values = c("blue", "green", "red"), labels = c("df = 1", "df = 3", "df = 6")) +
xlab("") + ylab("")
fdistL <- melt(fdist, id.vars = "x", variable.name = "disttype",
value.name = "dens")
d <- ggplot(fdistL, aes(x = x, y = dens, color = disttype))
d + geom_line(size = 1.5) + theme_bw(base_size = 24) +
coord_cartesian(ylim = c(0, 1)) +
scale_color_manual("", values = c("blue", "green", "red"), labels = c("df = 1", "df = 3", "df = 6")) +
xlab("") + ylab("")
fdistL <- melt(fdist, id.vars = "x", variable.name = "disttype",
value.name = "dens")
d <- ggplot(fdistL, aes(x = x, y = dens, color = disttype))
d + geom_line(size = 1.5) + theme_bw(base_size = 24) +
coord_cartesian(ylim = c(0, .5)) +
scale_color_manual("", values = c("blue", "green", "red"), labels = c("df = 1", "df = 3", "df = 6")) +
xlab("") + ylab("")
fdistL <- melt(fdist, id.vars = "x", variable.name = "disttype",
value.name = "dens")
d <- ggplot(fdistL, aes(x = x, y = dens, color = disttype))
d + geom_line(size = 1.5) + theme_bw(base_size = 24) +
coord_cartesian(ylim = c(0, .4)) +
scale_color_manual("", values = c("blue", "green", "red"), labels = c("df = 1", "df = 3", "df = 6")) +
xlab("") + ylab("")
850+510
236+377
1086+887
cheerios <- data.frame(group = rep(1:3, each = 5), data = c(5, 4, 6, 2, 5, 4, 3, 2, 1, 5, 7, 9, 5, 8, 6))
summary(aov(data ~ factor(group), data = cheerios))
big12 <- data.frame(team <- rep("Big 12", 190))
big12
big12 <- data.frame(team <- rep("Big 12", 190), bowl = "No")
head(big12)
big12 <- data.frame(team = rep("Big 12", 190), bowl = "No")
head(big12)
big12$bowl <- ifelse(rownames(big12) < 117, "Yes", "No")
table(big12$bowl)
rownames(big12)
big12 <- data.frame(team = rep("Big 12", 190), bowl = "No")
big12$bowl <- ifelse(as.numeric(rownames(big12)) < 117, "Yes", "No")
table(big12$bowl)
big12 <- data.frame(team = rep("Big 12", 190), bowl = "No")
big10 <- data.frame(team = rep("Big 10", 1086), bowl = "No")
pac12 <- data.frame(team = rep("Pac 12", 481), bowl = "No")
sec <- data.frame(team = rep("SEC", 887), bowl = "No")
# create yes/no bowl game variable
big12$bowl <- ifelse(as.numeric(rownames(big12)) < 117, "Yes", "No")
big10$bowl <- ifelse(as.numeric(rownames(big10)) < 237, "Yes", "No")
pac12$bowl <- ifelse(as.numeric(rownames(pac12)) < 189, "Yes", "No")
sec$bowl <- ifelse(as.numeric(rownames(sec)) < 378, "Yes", "No")
# rowbind
cfb <- rbind(big12, big10, pac12, sec)
with(cfb, table(team, bowl))
chisq.test(cfb)
?chisq.test
big12 <- data.frame(team = rep("Big 12", 190), bowl = "No")
big10 <- data.frame(team = rep("Big 10", 1086), bowl = "No")
pac12 <- data.frame(team = rep("Pac 12", 481), bowl = "No")
sec <- data.frame(team = rep("SEC", 887), bowl = "No")
# create yes/no bowl game variable
big12$bowl <- ifelse(as.numeric(rownames(big12)) < 117, "Yes", "No")
big10$bowl <- ifelse(as.numeric(rownames(big10)) < 237, "Yes", "No")
pac12$bowl <- ifelse(as.numeric(rownames(pac12)) < 189, "Yes", "No")
sec$bowl <- ifelse(as.numeric(rownames(sec)) < 378, "Yes", "No")
# rowbind
cfb <- rbind(big12, big10, pac12, sec)
chisqr.test(with(cfb, table(team, bowl)))
big12 <- data.frame(team = rep("Big 12", 190), bowl = "No")
big10 <- data.frame(team = rep("Big 10", 1086), bowl = "No")
pac12 <- data.frame(team = rep("Pac 12", 481), bowl = "No")
sec <- data.frame(team = rep("SEC", 887), bowl = "No")
# create yes/no bowl game variable
big12$bowl <- ifelse(as.numeric(rownames(big12)) < 117, "Yes", "No")
big10$bowl <- ifelse(as.numeric(rownames(big10)) < 237, "Yes", "No")
pac12$bowl <- ifelse(as.numeric(rownames(pac12)) < 189, "Yes", "No")
sec$bowl <- ifelse(as.numeric(rownames(sec)) < 378, "Yes", "No")
# rowbind
cfb <- rbind(big12, big10, pac12, sec)
chisq.test(with(cfb, table(team, bowl)))
chisq.test(with(cfb, table(team, bowl)), simulate.p.value = TRUE, B = 100000)
chisq.test(with(cfb, table(team, bowl)), simulate.p.value = TRUE, B = 10000000)
write.csv("/home/brandon/Copy/Courses/cfbchisq.csv", row.names = FALSE)
write.csv(cfb, file = "/home/brandon/Copy/Courses/cfbchisq.csv", row.names = FALSE)
mean(c(7,7,8,8,7,5))
sd(c(7,7,8,8,7,5))
mean(c(3, 4, 2, 4, 6, 2))
sd(c(3, 4, 2, 4, 6, 2))
x <- c(7,7,8,8,7,5)
y <- c(3, 4, 2, 4, 6, 2)
cor(x, y)
cor(x, y)^2
update.packages(ask=F)
1880+2048+194+76
1880+4290
4198+6929
mean(c(6.7, 8.1, 6.4, 6.0, 7.4))
mean(c(7.2, 7.9, 7, 6.7, 7.7))
14+11+10
35/3
36/3
22 + 34+26+48
130/4
140/4
140/5
3+5+8+5
aovdat <- data.frame(group = rep(1:3, each = 2), x = c(8, 7, 7, 6, 4, 2))
summary(aov(x ~ group, data = aovdat))
23.65+1.69
depdat <- c(.5, -.2, .6, .7, .3)
t.test(depdat)
sd(depdat)
0.4/(0.357/sqrt(5))
aovdat <- data.frame(group = rep(1:3, each = 3), x = c(8, 6, 4, 14, 11, 11, 4, 5, 6))
summary(aov(x ~ group, data = aovdat))
aovdat
summary(aovdat)
with(aovdat, tapply(x, group, mean))
(6 - 7.667)^2
summary(aov(x ~ factor(group), data = aovdat))
(5 - 7.667)^2
(12 - 7.667)^2
(2.778889+7.112889+18.77489)*3
86+16
110*100
11000/200
?table
chidat <- matrix(c(70, 30, 40, 60), byrow = TRUE, ncol = 2, nrow = 2)
colnames(chidat) <- c("Male", "Female")
rownames(chidat) <- c("MW", "TuTh")
chidat <- as.table(chidat)
chidat
chisq.test(chidat)
?chisq.test
chisq.test(chidat, correct = FALSE)
15^2/55
(15^2/55)*4
Xsq <- chisq.test(chidat, correct = FALSE)
Xsq$expected
Xsq$observed
(Xsq$observed-Xsq$expected)
(Xsq$observed-Xsq$expected)^2/Xsq$expected
sum((Xsq$observed-Xsq$expected)^2/Xsq$expected)
cordat <- data.frame(x = c(22, 34, 26, 48, 10), y = c(3, 5, 8, 5, 4))
with(cordat, cor(x, y))
18*18
324 + 400 + 36 + 36 + 4
800/4
sqrt(200)
sqrt(14/4)
14/4
sqrt(3.5)
14.14*1.87
6/26.4418
set.seed(5689)
movies <- movies[sample(nrow(movies), 1000), ]
m <- ggplot(movies, aes(x=rating))
m + geom_histogram() + theme_bw(base_size = 18)
set.seed(5689)
library(ggplot2)
movies <- movies[sample(nrow(movies), 1000), ]
m <- ggplot(movies, aes(x=rating))
m + geom_histogram() + theme_bw(base_size = 18)
m + geom_histogram(binwidth=1) + theme_bw(base_size = 18)
m + geom_histogram(binwidth=.5) + theme_bw(base_size = 18)
m + geom_histogram(binwidth=.5) + theme_bw(base_size = 18) + ylim(c(0, 150))
m + geom_histogram(binwidth=.5) + theme_bw(base_size = 18) + ylim(c(0, 150)) +
scale_x_continuous("Rating", limits = c(0, 10), breaks = seq(0, 10, .5))
scale_x_continuous("Rating", limits = c(0, 10), breaks = seq(0, 10, 1))
m + geom_histogram(binwidth=.5) + theme_bw(base_size = 18) + ylim(c(0, 150)) +
scale_x_continuous("Rating", limits = c(0, 10), breaks = seq(0, 10, 1))
m + geom_histogram(binwidth=1) + theme_bw(base_size = 18) + ylim(c(0, 200)) +
scale_x_continuous("Rating", limits = c(0, 10), breaks = seq(0, 10, 1))
m + geom_histogram(binwidth=1) + theme_bw(base_size = 18) + ylim(c(0, 250)) +
scale_x_continuous("Rating", limits = c(0, 10), breaks = seq(0, 10, 1))
m + geom_histogram(binwidth=1) + theme_bw(base_size = 18) + ylim(c(0, 300)) +
scale_x_continuous("Rating", limits = c(0, 10), breaks = seq(0, 10, 1))
p <- ggplot(mtcars, aes(factor(cyl), mpg))
p + geom_boxplot() + theme_bw(base_size = 18)
p + geom_boxplot() + theme_gray(base_size = 18)
p + geom_boxplot() + theme_bw(base_size = 18)
p + geom_boxplot() + theme_bw(base_size = 18) + coord_flip()
-22/(4*14)
-25/(4*14)
-23/(4*14)
24*4
96 - 23.8 - 28.1 - 19.98
96 - 23.8 - 28.1 - 19.9
22 * 4
88 - 22.7 - 23.8 - 21.1
?chisq.test
x <- matrix(c(78, 25, 38, 15, 90, 82, 59, 23, 49, 58, 48, 28, 32, 38, 18, 62), byrow = TRUE, ncol = 4)
x
chisq.test(x)
x <- data.frame(group = rep(1:4, each = 5), white = c(77, 81, 61, 76, 69, 74, 66, 58, 61, 80, 73, 78, 57, 69, 63, 76, 85, 77, 64, 69))
x
summary(aov(white~factor(white), data = x))
mean(x$white)
with(x, tapply(white, group, mean))
summary(aov(white~factor(group), data = x))
32.36*5
161.8+1112.4
indttest <- function(mean1, var1, n1, mean2, var2, n2, sd = TRUE) {
if(sd == TRUE) {
var1 <- var1^2
var2 <- var2^2
}
num = mean1 - mean2
den = sqrt((((n1 - 1)*var1 + (n2 - 1)*var2)/(n1 + n2 - 2))*(1/n1 + 1/n2))
num/den
}
indttest(3.425, .259, 8, 3.66, .235, 8, sd = TRUE)
indttest(65.625, 5042.917, 16, 45.214, 2014.503, 14, sd = FALSE)
x <- matrix(c(24886, 49599, 17832, 9920, 291934, 598527, 247450, 169200), byrow=TRUE, ncol = 4)
chisq.test(x)
chisq.test(x)$expected
names(chisq.test(x))
chisq.test(x)$observed - chisq.test(x)$expected
chisq.test(x)$observed
x <- matrix(c(11, 9, 8, 12), byrow=TRUE, ncol = 2)
chisq.test(x)
chisq.test(x)$expected
sum((chisq.test(x)$observerd - chisq.test(x)$expected)^2/chisq.test(x)$expected)
(chisq.test(x)$observerd - chisq.test(x)$expected)^2/chisq.test(x)$expected
sum((chisq.test(x)$observed - chisq.test(x)$expected)^2/chisq.test(x)$expected)
chisq.test(x, correct = FALSE)
indttest(2.2, 3.29, 10, 1.33, 1.5, 9, sd = FALSE)
x <- data.frame(group = rep(1:2, each = 4), income = c(408085, 421849, 446950, 469162, 65357, 67390, 69865, 73301))
t.test(income ~ factor(group), data = x)
x <- matrix(c(36, 14, 30, 25), byrow = TRUE, ncol = 2)
chisq.test(x)
chisq.test(x)$expected
chisq.test(x, correct = FALSE)
x <- data.frame(group = rep(1:2, each = 10), income = c(3, 6, 5, 4, 3, 5, 2, 3, 5, 4, 2, 2, 4, 3, 2, 1, 3, 5, 2, 3))
t.test(income~factor(group), data = x)
x
with(x, tapply(income, factor(group), sd))
with(x, tapply(income, factor(group), var))
x <- data.frame(group = rep(1:4, each = 4), miss = c(6, 3, 15, 4, 3, 0, 25, 5, 7, 7, 6, 2, 3, 12, 7, 14))
summary(aov(miss ~ factor(group), data = x))
x <- matrix(c(2, 7, 13, 3), byrow = TRUE, ncol = 2)
chisq.test(x, correct = FALSE)
chisq.test(x, correct = FALSE)$expected
x <- data.frame(group = c(1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), yards = c(2, 4.2, 5.5, 3.3, 3, 3.2, 1.3, 4.3, .6, 2.7, 2.6, 4.4, 4, 4.3))
t.test(yards ~ factor(group), data = x)
with(x, tapply(yards, factor(group), var))
qt(.1, 6, lower.tail = FALSE)
t.test(c(.22, .59, .02, .51, .46, -.37, .4))
t.test(c(4, 1, 3, 2))
var(c(4, 1, 3, 2))
sd(c(4, 1, 3, 2))
sd(c(4, 1, 3, 2))/sqrt(4)
2.5(sd(c(4, 1, 3, 2))/sqrt(4))
2.5/(sd(c(4, 1, 3, 2))/sqrt(4))
t.test(c(12, 16, 17, 17, 6))
?t.test
t.test(c(12, 16, 17, 17, 6), alternative = "greater")
x <- data.frame(group = rep(1:4, each = 7), sleep = c(9,9,8,10,7,9,10,5,7,6,9,7,10,10,9,8,7,11,8,9,11,6,8,7,9,7,9,11))
summary(aov(sleep ~ factor(group), data = x))
x <- matrix(c(8,2,6,4), byrow=TRUE, ncol=2)
chisq.test(x, correct = FALSE)
x <- data.frame(group = rep(1:3, each = 3), sleep = c(10, 12, 12, 10, 9, 11, 9, 8, 9))
summary(aov(sleep ~ factor(group), data = x))
x <- data.frame(group = rep(1:2, each = 7), hours = c(6,3,5,8,6,5,7,6,2,3,3,5,6,4))
t.test(hours ~ factor(group), data = x)
t.test(hours ~ factor(group), data = x, alternative = "greater")
with(x, tapply(hours, factor(group), var))
t.test(hours ~ factor(group), data = x, alternative = "greater", var.equal = TRUE)
6*2.571+6*2.476
30.282/12
2.5235*(2/7)
1.571/.721
1.571/sqrt(.721)
2/7
sqrt(.721)
x <- matrix(c(11,14,12,13), byrow=TRUE, ncol=2)
chisq.test(x, correct = FALSE)
x <- data.frame(group = rep(1:2, each = 2), video = c(23.8, 28.1, 19.9, 24.2, 22.7, 23.8, 21.1, 20.4))
t.test(video ~ factor(group), data = x, alternative = "greater")
t.test(video ~ factor(group), data = x, alternative = "greater", var.equal = TRUE)
x
x <- data.frame(group = rep(1:2, each = 4), video = c(23.8, 28.1, 19.9, 24.2, 22.7, 23.8, 21.1, 20.4))
x
t.test(video ~ factor(group), data = x, alternative = "greater", var.equal = TRUE)
names(t.test(video ~ factor(group), data = x, alternative = "greater", var.equal = TRUE))
with(x, tapply(video, factor(group), var))
indttest <- function(mean1, var1, n1, mean2, var2, n2, sd = TRUE) {
if(sd == TRUE) {
var1 <- var1^2
var2 <- var2^2
}
num = mean1 - mean2
den = sqrt((((n1 - 1)*var1 + (n2 - 1)*var2)/(n1 + n2 - 2))*(1/n1 + 1/n2))
num/den
}
indttest(24, 11.23, 4, 22, 2.37, 4, sd = FALSE)
4*11.23
4*2.37
44.92+9.48
54.4/6
(54.4/6)*.5
sqrt(4.5333)
3*11.23+3*2.37
40.8/6
6.8*.5
sqrt(3.4)
2/1.84
x <- data.frame(group = rep(1:4, each = 3), cost = c(140, 255, 165, 137, 188, 215, 230, 195, 185, 175, 145, 200))
with(x, tapply(cost, factor(group), mean))
mean(x$cost)
(with(x, tapply(cost, factor(group), mean)) - mean(x$cost))^2
sum((with(x, tapply(cost, factor(group), mean)) - mean(x$cost))^2)
sum((with(x, tapply(cost, factor(group), mean)) - mean(x$cost))^2)*3
summary(aov(cost ~ factor(group), data = x))
1492+13088
x <- matrix(c(30, 130, 160, 60, 30, 90, 90, 160, 250), byrow=TRUE, ncol = 3)
x
chisq.test(x)
chisq.test(x, correct = FALSE)
chisq.test(x)$expected
addmargins(x)
x <- matrix(c(30, 130, 60, 30), byrow=TRUE, ncol = 2)
chisq.test(x, correct = FALSE)
chisq.test(x, correct = FALSE)$expected
library(shiny)
# Generate correlated data
dataMat <- cbind(X = rnorm(500), Y = rnorm(500))
genCorr <- runif(1, -1, 1)
mat <- diag(1, 2, 2)
delta <- row(mat) - col(mat)
mat[delta != 0] <- genCorr
# Cholesky decomposition
dataMat2 <- data.frame(dataMat %*% chol(mat))
names(dataMat2) <- c("X", "Y")
corData <- cor(dataMat2)[1,2]
library(ggplot2)
<- ggplot(dataMat2, aes(x = X, y = Y))
p <- p + theme_bw(base_size = 24) + geom_point()
p <- ggplot(dataMat2, aes(x = X, y = Y))
p <- p + theme_bw(base_size = 24) + geom_point()
print(p)
p + geom_vline(aes(xintercept = c(-2, 2)))
ranges <- c(-2,2)
p + geom_vline(aes(xintercept = ranges)
)
ranges <- c(-1, 0)
p + geom_vline(aes(xintercept = ranges))
load("/home/brandon/Dropbox/cfbFootball/Data/Final/cfbDataFinal-Apr11.Rdata")
names(cfbData)
table(cfbData$conference)
sec <- subset(cfbData, conference = c('Southeastern Conference', 'Big 12 Conference'))
?subset
names(sec)
table(sec$school)
sec <- subset(cfbData, conference = c('Southeastern Conference', 'Big 12 Conference') & Year > 1999,
select = c('school', 'Year', 'conference', 'Win', 'Loss', 'Tie', 'PF.Year',
'PA.Year', 'Delta.Year', 'APRank', 'rivals.avgstar'))
head(sec)
str(sec)
tmp <- subset(sec, Year > 1999)
str(tmp)
head(tmp)
load("/home/brandon/Dropbox/cfbFootball/Data/Final/cfbDataFinal-Apr11.Rdata")
sec <- subset(cfbData, conference = c('Southeastern Conference', 'Big 12 Conference'),
select = c('school', 'Year', 'conference', 'Win', 'Loss', 'Tie', 'PF.Year',
'PA.Year', 'Delta.Year', 'APRank', 'rivals.avgstar'))
secbig12 <- subset(sec, Year > 1999)
head(secbig12)
library(data.table)
?data.table
?subset
secbig12 <- subset(cfbData, conference %in% c('Southeastern Conference', 'Big 12 Conference') & Year > 1999,
select = c('school', 'Year', 'conference', 'Win', 'Loss', 'Tie', 'PF.Year',
'PA.Year', 'Delta.Year', 'APRank', 'rivals.avgstar'))
head(secbig12)
secbig12 <- data.table(secbig12)
# set key
setkeyv(secbig12, c('school', 'Year'))
?unique
secbig12 <- unique(secbig12)
head(secbig12)
secbig12 <- subset(cfbData, conference %in% c('Southeastern Conference', 'Big 12 Conference') & Year > 1999,
select = c('school', 'Year', 'conference', 'Win', 'Loss', 'Tie', 'PF.Year',
'PA.Year', 'Delta.Year', 'APRank', 'NCAARank', 'rivals.avgstar'))
#secbig12 <- subset(sec, Year > 1999)
# one line per school per year
library(data.table)
secbig12 <- data.table(secbig12)
# set key
setkeyv(secbig12, c('school', 'Year'))
secbig12 <- unique(secbig12)
head(secbig12)
head(secbig12, n = 15)
nrow(secbig12)
table(secbig12$school)
table(factor(secbig12$school))
source('~/Copy/Courses/ESRM5393/Assignment/createSECbig12.r')
source('~/Copy/Courses/ESRM5393/Assignment/createSECbig12.r')
head(secbig12, n = 15)
names(cfbData)
secbig12 <- subset(cfbData, conference %in% c('Southeastern Conference', 'Big 12 Conference') & Year > 2001,
select = c('school', 'Year', 'conference', 'Win', 'Loss', 'Tie', 'PF.Year',
'PA.Year', 'Delta.Year', 'APRank', 'rivals.numRecruit', 'rivals.avgstar'))
#secbig12 <- subset(sec, Year > 1999)
# one line per school per year
library(data.table)
secbig12 <- data.table(secbig12)
# set key
setkeyv(secbig12, c('school', 'Year'))
secbig12 <- unique(secbig12)
# save as csv file
write.csv(secbig12, file = '/home/brandon/Copy/Courses/ESRM5393/Assignment/secbig12.csv', row.names = FALSE)
library(ggplot2)
hist(secbig12$Win)
hist(secbig12$Loss)
head(secbig12)
hist(secbig12$PF.Year)
hist(secbig12$Delta.Year)
hist(secbig12$rivals.numRecruit)
hist(secbig12$rivals.avgstar)
hist(secbig12$Win)
?hist
h <- ggplot(secbig12, aes(x = Win)) + theme_bw()
h + geom_histogram(binwidth = 1)
h <- ggplot(secbig12, aes(x = Loss)) + theme_bw()
h + geom_histogram(binwidth = 1)
h <- ggplot(secbig12, aes(x = Win)) + theme_bw()
h + geom_histogram(binwidth = 1)
table(secbig12$Win)
h <- ggplot(secbig12, aes(x = rivals.avgstar)) + theme_bw()
h + geom_histogram()
2/30
h + geom_histogram(binwidth=.1)
rep(1:2, each = 5)
rep(c('a','b'), each = 5)
rep(c('a','b'), times = 5)
set.seed(1234)
smalldat <- data.frame(x = rnorm(10), group1 = rep(1:2, each = 5),
group2 = rep(c('a','b'), times = 5))
smalldat
library(data.table)
smalldat <- data.table(smalldat)
smalldat[, aggGroup1 := mean(x), by = group1]
smalldat
smalldat[, aggGroup1.2 := mean(x), by = list(group1, group2)]
smalldat
setkeyv(smalldat, c('group1','group2'))
uniqdat <- unique(smalldat)
uniqdat
uniqdat <- subset(unique(smalldat), select = -x)
uniqdat
library(plyr)
?ddply
aggdat1 <- ddply(smalldat, .(group1), summarize,
aggGroup1plyr = mean(x))
aggdat12 <- ddply(smalldat, .(group1, group2), summarize,
aggGroup1.1plyr = mean(x))
aggdat1
aggdat2
aggdat12
smalldat <- join(smalldat, aggdat1, by = 'group1')
smalldat
smalldat <- join(smalldat, aggdat12, by = c('group1', 'group2'))
smalldat
setwd("/home/brandon/Dropbox/lebebr01.github.com/Rmd")
library(knitr)
knit("2014-01-06-FavDataTable.Rmd")
