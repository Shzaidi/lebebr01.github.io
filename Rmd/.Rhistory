new <- data.frame(n = c(50, 150, 200, 250, 350, 400, 450, 500), err.dist = rep("norm", 8), terms = rep("b0", 8))
head(predict(mod.sub), newdata = new)
predict(mod.sub, newdata = new)
new <- data.frame(n = c(50, 150, 200, 250, 350, 400, 450, 500))
predict(mod.sub, newdata = new)
summary(mod.sub)
summary(mod.full)
p <- ggplot(ffEst, aes(x = n, y =relBias))
p + geom_point()
library(ggplot2)
p <- ggplot(ffEst, aes(x = n, y =relBias))
p + geom_point()
p + geom_point() + geom_abline(intercept = .01396685, slope = -0.00005172)
p <- ggplot(subset(ffEst, err.dist == "norm" & terms == "b0", aes(x = n, y =relBias))
p + geom_point() + geom_abline(intercept = .01396685, slope = -0.00005172)
p <- ggplot(subset(ffEst, err.dist == "norm" & terms == "b0"), aes(x = n, y =relBias))
p + geom_point() + geom_abline(intercept = .01396685, slope = -0.00005172)
p + geom_point() + geom_abline(intercept = .01396685, slope = -0.00005172) +
theme_bw()
ffEst[err.dist == "norm" & terms == "b0", avgRB = mean(relBias), by = n]
ffEst[err.dist == "norm" & terms == "b0", list(avgRB = mean(relBias)), by = n]
p + geom_point() + geom_abline(intercept = .01396685, slope = -0.00005172) +
theme_bw() + stat_summary(fun.y = mean, color = "red", size = 3)
p + geom_point() + geom_abline(intercept = .01396685, slope = -0.00005172) +
theme_bw() + stat_summary(fun.y = mean, color = "red", size = 3, geom = "point")
p + geom_point() + geom_abline(intercept = .01396685, slope = -0.00005172) +
theme_bw() + stat_summary(fun.y = mean, color = "red", size = 5, geom = "point")
p + geom_point() + geom_abline(intercept = .01396685, slope = -0.00005172) +
theme_bw() + stat_summary(fun.y = mean, color = "red", size = 4, geom = "point") +
stat_summary(fun.y = median, color = "green", size = 4, geom = "point")
p + geom_point() + geom_abline(intercept = .01396685, slope = -0.00005172, size = 2) +
theme_bw() + stat_summary(fun.y = mean, color = "red", size = 4, geom = "point") +
stat_summary(fun.y = median, color = "green", size = 4, geom = "point")
p + geom_point() + geom_abline(intercept = .01396685, slope = -0.00005172, size = 1) +
theme_bw() + stat_summary(fun.y = mean, color = "red", size = 4, geom = "point") +
stat_summary(fun.y = median, color = "green", size = 4, geom = "point")
p + geom_point() +
geom_abline(intercept = .01396685, slope = -0.00005172, size = 1, linetype = 'dashed') +
theme_bw() + stat_summary(fun.y = mean, color = "red", size = 4, geom = "point") +
stat_summary(fun.y = median, color = "green", size = 4, geom = "point")
p <- ggplot(subset(ffEst, err.dist == "bimod" & terms == "b0"), aes(x = n, y =relBias))
p + geom_point() +
geom_abline(intercept = .01396685, slope = -0.00005172, size = 1, linetype = 'dashed') +
theme_bw() + stat_summary(fun.y = mean, color = "red", size = 4, geom = "point") +
stat_summary(fun.y = median, color = "green", size = 4, geom = "point")
p <- ggplot(subset(ffEst, err.dist == "bimod" & terms == "b0"), aes(x = n, y =relBias))
p + geom_point() +
geom_abline(intercept = .00263413, slope = -0.00000604, size = 1, linetype = 'dashed') +
theme_bw() + stat_summary(fun.y = mean, color = "red", size = 4, geom = "point") +
stat_summary(fun.y = median, color = "green", size = 4, geom = "point")
newd <- data.frame(n = c(50, 150, 200, 250, 350, 400, 450, 500),
err.dist = rep("norm", 8), terms = rep("b0", 8))
predict(mod.sub, newdata = newd)
newd <- data.frame(n = c(50,100, 150, 200, 250,300, 350, 400, 450, 500),
err.dist = rep("norm", 10), terms = rep("b0", 10))
predict(mod.sub, newdata = newd)
avgs <- ffEst[, list(avgRB = mean(relBias), avgt1e = mean(t1e)),
by = list(n, err.dist, terms)]
avgs
t1e.sub <- lm(avgt1e ~ n * factor(err.dist) * factor(terms), data = ffEst,
subset = n == c(100, 300))
t1e.sub <- lm(avgt1e ~ n * factor(err.dist) * factor(terms), data = avgs,
subset = n == c(100, 300))
summary(t1e.sub)
t1e.sub <- lm(avgt1e ~ n * factor(err.dist) * factor(terms) - n:factor(err.dist):factor(terms), data = avgs,
subset = n == c(100, 300))
summary(t1e.sub)
anova(t1e.sub)
t1e.sub <- lm(avgt1e ~ n + factor(err.dist) + factor(terms), data = avgs,
subset = n == c(100, 300))
t1e.sub
t1e.sub <- lm(avgt1e ~ n + factor(err.dist) + factor(terms), data = avgs,
summary(t1e.sub)
t1e.sub <- lm(avgt1e ~ n * factor(err.dist) * factor(terms), data = avgs)
t1e.sub
summary(t1e.sub)
mod.sub <- lm(relBias ~ n * factor(err.dist) * factor(terms), data = ffEst)
summary(mod.sub)
summary(mod.full)
p <- ggplot(subset(ffEst, err.dist == "norm" & terms == "b0"), aes(x = n, y =relBias))
p + geom_point() +
geom_abline(intercept = .0002904978, slope = -0.0000039695, size = 1, linetype = 'dashed') +
theme_bw() + stat_summary(fun.y = mean, color = "red", size = 4, geom = "point") +
stat_summary(fun.y = median, color = "green", size = 4, geom = "point")
library(simReg)
?rbimod
plot(rbimod(50, 0, .64, 2))
plot(rbimod(50, c(-1, 1), .64, 2))
rbimod
sim.reg.single
error.sim.single
err <- rbimod(n, mean = rep(0, num.dist), var = rep(1, num.dist), num.dist)*chol(errorVar/2)
num.dist = 2
errorVar = .64
num.dist = 2
err <- rbimod(n, mean = rep(0, num.dist), var = rep(1, num.dist), num.dist)*chol(errorVar/2)
n = 50
err <- rbimod(n, mean = rep(0, num.dist), var = rep(1, num.dist), num.dist)*chol(errorVar/2)
err
plot(err)
mean(err)
?vector
meanerr <- vector(length = 10000)
str(meanerr)
meanerr <- vector(mode = "integer", length = 10000)
str(meanerr)
for(i in 1:10000){
meanerr[i] <- rbimod(n, mean = rep(0, num.dist), var = rep(1, num.dist), num.dist)*chol(errorVar/2)
}
warnings
warnings()
for(i in 1:10000){
meanerr[i] <- mean(rbimod(n, mean = rep(0, num.dist), var = rep(1, num.dist), num.dist)*chol(errorVar/2))
}
mean(meanerr)
plot(meanerr)
summary(meanerr)
for(i in 1:10000){
meanerr[i] <- var(rbimod(n, mean = rep(0, num.dist), var = rep(1, num.dist), num.dist)*chol(errorVar/2))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] <- var(rbimod(n, mean = rep(0, num.dist), var = rep(1, num.dist), num.dist)*chol(errorVar))
}
summary(meanerr)
library(simReg)
##Setting population parameters
fixed <- ~ 1 + time + actmath + time:actmath
fixed.param <- c(1.8,-.6,.05,.02)
random <- ~ 1 + time
random.param <- c(.5, .05)
cov.param <- list(c(0,4.904))
errorVar <- 0.64
w.var <- 2
randCor <- 0
n <- c(30,50)
p <- c(6,12)
rand.dist <- c("norm", "lap", "chi", "bimod")
err.dist <-  c("norm", "lap", "chi", "bimod")
serCor <- "ID"
serCorVal <- 0
data.str <- "long"
num.dist <- 2
meanerr <- vector(mode = "integer", length = 10000)
for(i in 1:10000){
var(((rbimod(p, mean = rep(0, num.dist), var = rep(1, num.dist), num.dist)
*chol(errorVar))))
}
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = rep(0, num.dist), var = rep(1, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-1, 1), var = rep(1, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-1, 1), var = rep(.5, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.8, 0.8), var = rep(.5, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.85, 0.85), var = rep(.5, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
plot(density(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar)))))
for(i in 1:10000){
meanerr[i] = mean(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = mean(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
p
p = 6
for(i in 1:10000){
meanerr[i] = mean(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.5, num.dist), num.dist)
*chol(errorVar))))
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.45, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.4, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.9, 0.9), var = rep(.35, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.85, 0.85), var = rep(.35, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
p = 12
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.85, 0.85), var = rep(.35, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
p = 200
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.85, 0.85), var = rep(.35, num.dist), num.dist)
*chol(errorVar))))
}
summary(meanerr)
meanerr[i] = var(((rbimod(p, mean = c(-0.85, 0.85), var = rep(.35, num.dist), num.dist)))
)
p = 6
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.85, 0.85), var = rep(.35, num.dist), num.dist))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.85, 0.85), var = rep(.25, num.dist), num.dist))))
}
summary(meanerr)
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.75, 0.75), var = rep(.25, num.dist), num.dist))))
}
summary(meanerr)
p = 12
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.75, 0.75), var = rep(.25, num.dist), num.dist))))
}
summary(meanerr)
p = 100
for(i in 1:10000){
meanerr[i] = var(((rbimod(p, mean = c(-0.75, 0.75), var = rep(.25, num.dist), num.dist))))
}
summary(meanerr)
plot(density(((rbimod(p, mean = c(-0.75, 0.75), var = rep(.25, num.dist), num.dist)))))
?findInterval
x <- 2:18
v <- c(5, 10, 15) # create two bins [5,10) and [10,15)
cbind(x, findInterval(x, v)
)
library(simReg)
fixed <- ~ 1 + time + actmath + time:actmath
fixed.param <- c(1.8,-.6,.05,.02)
random <- ~ 1 + time
random.param <- c(.5, .05)
cov.param <- list(c(0,4.904))
errorVar <- 0.64
w.var <- 2
randCor <- 0
n <- c(30)
p <- c(6)
library(devtools)
install_github("simReg", username = "lebebr01")
library(simReg)
?sim.reg
library(devtools)
install_github("simReg", username = "lebebr01")
library(simReg)
?sim.reg
sim.reg
library(devtools)
install_github("simReg", username = "lebebr01")
library(simReg)
?sim.reg
sim.reg
##Setting population parameters
fixed <- ~ 1 + time + actmath + time:actmath
fixed.param <- c(1.8,-.6,.05,.02)
random <- ~ 1 + time
random.param <- c(.5, .05)
cov.param <- list(c(0,4.904))
errorVar <- 0.64
w.var <- 2
randCor <- 0
n <- c(30)
p <- c(6)
rand.dist <- c("norm", "lap", "chi", "bimod")
err.dist <-  c("norm", "lap", "chi", "bimod")
serCor <- "ID"
serCorVal <- 0
data.str <- "long"
num.dist <- 2
var.cond <- as.data.frame(expand.grid(rand.dist, err.dist))
colnames(var.cond) <- c("rand.dist", "err.dist")
##Simulating the datasets
library(doSNOW)
library(rlecuyer)
cl <- makeCluster(2, type = "SOCK")
clusterSetupRNG(cl, seed = 1919)
registerDoSNOW(cl)
modData <- foreach(i=1:16) %:%
foreach(k=1:300, .packages = "simReg") %dopar% {
sim.reg(fixed,random,fixed.param,random.param,
w.var, cov.param, n, p,
errorVar, randCor, var.cond[i,3], var.cond[i,4],
serCor, serCorVal, data.str, num.dist, mean = c(-.75, .75), var = c(0.25, 0.25))
}
install.packages("magittr")
install.packages("magrittr")
install.packages("EstCRM")
library(EstCRM)
EstCRM
EstCRMitem
library(lme4)
?lmer
Vignettes
vignettes()
Vignettes()
??vig
browseVignettes()
fm1 <- lme(weight ~ Time * Diet, data=BodyWeight, ~ Time | Rat)
Variogram(fm1, form = ~ Time | Rat, nint = 10, robust = TRUE)
library(nlme)
fm1 <- lme(weight ~ Time * Diet, data=BodyWeight, ~ Time | Rat)
Variogram(fm1, form = ~ Time | Rat, nint = 10, robust = TRUE)
library(hightlightHTML)
tags <- c("#bgred {background-color: red;}", "#bgblue {background-color: blue;}",
"colgold {color: gold;}", "bgblack {background-color: black; color: white;}")
library(highlightHTML)
highlightHTML(input = "C:/Users/bleb/Dropbox/highlightHTML/inst/examples/mwe.html",)
highlightHTML(input = "C:/Users/bleb/Dropbox/highlightHTML/inst/examples/mwe.html",
output = "C:/Users/bleb/Desktop/mwe.html", updateCSS = TRUE, tags = tags, browse = TRUE)
library(knitr)
?knitr
?knit
library(highlightHTML)
tags <- c("#bgred {background-color: red;}", "#bgblue {background-color: blue;}",
"colgold {color: gold;}", "bgblack {background-color: black; color: white;}")
highlightHTML(input = "C:/Users/bleb/Dropbox/highlightHTML/inst/examples/mwe.html",
output = "C:/Users/bleb/Desktop/mwe.html", tags = tags)
highlightHTML(input = "C:/Users/bleb/Dropbox/highlightHTML/inst/examples/mwe.html",
output = "C:/Users/bleb/Desktop/mwe.html", tags = tags)
library(Lahman)
library(dplyr)
library(ggplot2)
AllstarFull %>%
group_by(teamID, yearID) %>%
summarise(number = sum(GP))
head(AllstarFull)
AllstarFull  %>%
filter(yearID > 2004, lgID == 'AL') %>%
group_by(teamID, yearID) %>%
summarise(number = sum(GP))
numAS <- AllstarFull  %>%
filter(yearID > 2004, lgID == 'AL') %>%
group_by(teamID, yearID) %>%
summarise(number = sum(GP))
numAS
tail(numAS)
numAS <- AllstarFull  %>%
filter(yearID > 2006, lgID == 'AL') %>%
group_by(teamID, yearID) %>%
summarise(number = sum(GP))
numAS
?AllstarFull
AllstarFull$selected <- 1
numAS <- AllstarFull  %>%
filter(yearID > 2006, lgID == 'AL', teamID %in% c('MIN', 'CLE', 'DET', 'CHA', 'KCA')) %>%
group_by(teamID, yearID) %>%
summarise(number = sum(selected))
numAS
b <- ggplot(numAS, aes(x = teamID, y = number, group = yearID)) + theme_bw()
b + geom_bar()
b + geom_bar(stat = "identity")
b <- ggplot(numAS, aes(x = teamID, y = number, fill = yearID)) + theme_bw()
b + geom_bar(stat = "identity", position = "dodge")
b <- ggplot(numAS, aes(x = teamID, y = number, fill = facotr(yearID))) + theme_bw()
b + geom_bar(stat = "identity", position = "dodge")
b <- ggplot(numAS, aes(x = teamID, y = number, fill = factor(yearID))) + theme_bw()
b + geom_bar(stat = "identity", position = "dodge")
l <- ggplot(numAS, aes(x = yearID, y = number, color = teamID, shape = teamID))
l + geom_point(size = 4) + geom_line(size = 1)
l + geom_point(size = 4) + geom_line(size = 1) +
scale_y_continuous(limits = c(0, 6), expand = c(0,0))
l + geom_point(size = 4) + geom_line(size = 1) +
scale_y_continuous(limits = c(0, 7), expand = c(0,0))
install.packages("RcolorBrewer")
install.packages("RColorBrewer")
b <- ggplot(numAS, aes(x = teamID, y = number, fill = factor(yearID))) + theme_bw()
b + geom_bar(stat = "identity", position = "dodge") +
scale_color_brewer(palette = "Set1")
library(RColorBrewer)
b <- ggplot(numAS, aes(x = teamID, y = number, fill = factor(yearID))) + theme_bw()
b + geom_bar(stat = "identity", position = "dodge") +
scale_color_brewer(palette = "Set1")
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Set2")
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Set3")
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Accent")
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2")
b <- ggplot(numAS, aes(x = teamID, y = number, fill = factor(yearID))) + theme_bw()
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = number))
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = number), position = "dodge")
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = number), position = position_dodge(width = 1))
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = number), position = position_dodge(width = 1), color = "white",
vjust = -1)
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = number), position = position_dodge(width = 1), color = "white",
vjust = 0)
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = number), position = position_dodge(width = 1), color = "white",
vjust = 1.5)
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = number), position = position_dodge(width = 0.8), color = "white",
vjust = 1.5)
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = number), position = position_dodge(width = 0.5), color = "white",
vjust = 1.5)
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = number), position = position_dodge(width = 1), color = "white",
vjust = 1.5)
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = number), position = position_dodge(width = 0.9), color = "white",
vjust = 1.5)
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label = number), position = position_dodge(width = 0.9),
color = "black", vjust = 1.5)
b <- ggplot(numAS, aes(x = teamID, y = number, fill = factor(yearID))) + theme_bw()
b + geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer("Year", palette = "Dark2")
l <- ggplot(numAS, aes(x = yearID, y = number, color = teamID, shape = teamID))
l + geom_point(size = 4) + geom_line(size = 1) +
scale_y_continuous(limits = c(0, 7), expand = c(0,0)) +
scale_color_brewer("Team", palette = "Dark2")
l + geom_point(size = 4) + geom_line(size = 1) +
scale_y_continuous(limits = c(0, 7), expand = c(0,0)) +
scale_color_brewer("Team", palette = "Dark2") + scale_shape_discrete("Team") +
xlab("Year")
library(knitr)
setwd("C:/Users/bleb/Copy/lebebr01.github.io/RMD")
knit("2014-08-05-trendgraphics.Rmd")
knit("2014-08-05-trendgraphics.Rmd")
