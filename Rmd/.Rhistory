var(c(2, 8, 10, 14, 14, 22, 27, 41, 45, 48))
sd(c(2, 8, 10, 14, 14, 22, 27, 41, 45, 48))
dat <- c(2, 8, 10, 14, 14, 22, 27, 41, 45, 48))
dat <- c(2, 8, 10, 14, 14, 22, 27, 41, 45, 48)
dat
mean(dat)
sum((dat - mean(dat))^2)
sum((dat - mean(dat))^2)/9
install.packages("Rcmdr")
devtools::install_github(c("hadley/testthat", "rstudio/shiny", "rstudio/ggvis"))
library(ggvis)
ggvis(mtcars, props(x = ~wt, y = ~mpg)) + mark_point()
ggvis(mtcars, props(x = ~wt, y = ~mpg)) +
layer_smooth(se = TRUE,
span = input_slider(min = 0.3, max = 1, value = 0.8, step = 0.1,
label = "Smoothing span")) +
layer_point() +
guide_axis("x", title = "Weight") +
guide_axis("y", title = "MPG")
ggvis(mtcars, props(x = ~wt)) +
layer_density(
adjust = input_slider(.1, 2, value = 1, step = .1, label = "Bandwidth adjustment"),
kernel = input_select(
c("Gaussian" = "gaussian",
"Epanechnikov" = "epanechnikov",
"Rectangular" = "rectangular",
"Triangular" = "triangular",
"Biweight" = "biweight",
"Cosine" = "cosine",
"Optcosine" = "optcosine"),
label = "Kernel")
)
ggvis(mtcars, props(x = ~wt, y = ~mpg)) +
layer_smooth(span = input_slider(0.5, 1, 1, label = "span")) +
layer_point(props(size := input_slider(100, 1000, label = "size")))
ggvis(mtcars, props(x = ~wt, y = ~mpg, size := input_slider(10, 1000, label = "size"))) +
layer_point(props(fill := "red")) +
layer_point(props(stroke := "black", fill := NA))
qt(.025, 10)
qt(.05, 10)
qt(.05, 15)
qt(.10, 15)
library(devtools)
install_github(repo = 'highlightHTML', username = 'lebebr01', ref = 'testing')
library(highlightHTML)
?highlightHTMLtext
file <- system.file('examples', package = 'highlightHTML')
file1 <- paste(file, "bgtext.html", sep = "/")
tags <- c("#bgblack {background-color: black; color: white;}",
"#bgblue {background-color: #0000FF; color: white;}")
tmp <- readLines(file1)
CSSid <- gsub("\\{.+", "", tags)
CSSid <- gsub("^[\\s+]|\\s+$", "", CSSid)
CSSidPaste <- gsub("#", "", CSSid)
CSSid2 <- paste(" ", CSSid, sep = "")
ids <- paste("<span id='", CSSidPaste, "'>", sep = "")
for(i in 1:length(CSSid)){
locations <- grep(CSSid[i], tmp)  # finds locations to add id values
tmp[locations] <- gsub(paste("\\{", CSSid[i], sep = ''), ids[i], tmp[locations])  # adds the id values
tmp[locations] <- gsub("\\}", "</span>", tmp[locations])
}
tmp
library(knitr)
setwd("/home/brandon/Copy/lebebr01.github.io/Rmd")
knit("2014-03-14-htmltext.Rmd")
