library(knitr)
setwd("C:/Users/bleb/Copy/lebebr01.github.io/_posts")
knit("C:/Users/bleb/Copy/lebebr01.github.io/Rmd/2014-09-26-googleLocations.Rmd")
knit("C:/Users/bleb/Copy/lebebr01.github.io/Rmd/2014-09-26-googleLocations.Rmd")
knit("C:/Users/bleb/Copy/lebebr01.github.io/Rmd/2014-09-26-googleLocations.Rmd")
knit("C:/Users/bleb/Copy/lebebr01.github.io/Rmd/2014-09-26-googleLocations.Rmd")
knit("C:/Users/bleb/Copy/lebebr01.github.io/Rmd/2014-09-26-googleLocations.Rmd")
match_vars <- list(c('r1_i1', 'r2_i1', 'r3_i1'))
combn(match_vars[[1]])
combn(match_vars[[1]], 2)
t(combn(match_vars[[1]], 2))
match_vars <- list(c('r1_i1', 'r2_i1', 'r3_i1'), c('r1_i2', 'r2_i2', 'r3_i2'))
lapply(math_vars, function(xx) t(combn(xx, 2)))
lapply(match_vars, function(xx) t(combn(xx, 2)))
combn_vars <- lapply(match_vars, function(xx) t(combn(xx, 2)))
combn_vars
lapply(combn_vars, function(xx) paste(combn_vars, collapse = "=="))
paste(combn_vars[[1]][1, ], collapse = "==")
lapply(combn_vars, function(xx) apply(paste(combn_vars, collapse = "=="), 1))
?apply
lapply(combn_vars, function(xx) apply(combn_vars, 1, FUN = paste, collapse = "==")))
lapply(combn_vars, function(xx) apply(combn_vars, 1, FUN = paste, collapse = "=="))
apply(combn_vars[[1]], 1, paste, collapse = '==')
lapply(combn_vars, function(xx) apply(combn_vars[[xx]], 1, FUN = paste, collapse = "=="))
lapply(1:length(combn_vars), function(xx) apply(combn_vars[[xx]], 1, FUN = paste, collapse = "=="))
combn_equal <- lapply(1:length(combn_vars), function(xx)
apply(combn_vars[[xx]], 1, FUN = paste, collapse = "=="))
combn_equal <- lapply(combn_equal, function(xx) paste(xx, collapse = "|"))
combn_equal
combn_vars <- lapply(match_vars, function(xx) t(combn(xx, 2)))
combn_equal <- lapply(1:length(combn_vars), function(xx)
apply(combn_vars[[xx]], 1, FUN = paste, collapse = " == "))
combn_equal <- lapply(combn_equal, function(xx) paste(xx, collapse = " | "))
combn_equal
library(readr)
library(dplyr)
read_positions_10 <- fwf_positions(c(2, 6, 20, 21, 22, 25, 26, 27, 30, 31, 32, 45),
c(2, 8, 20, 21, 22, 25, 26, 27, 30, 31, 32, 86),
col_names = c('grade', 'booklet',
'r1_i1', 'r1_i2', 'r1_i3',
'r2_i1', 'r2_i2', 'r2_i3',
'r3_i1', 'r3_i2', 'r3_i3', 'items'))
lvl10_read <- read_fwf('X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/DATA/Spring2015Hybrid_Reading.txt',
read_positions_9, col_types = 'nncccccccccc') %>%
filter(grade == '4')
lvl10_read <- read_fwf('X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/DATA/Spring2015Hybrid_Reading.txt',
read_positions_10, col_types = 'nncccccccccc') %>%
filter(grade == '4')
summary(lvl10_read)
head(lvl10_read)
nrow(lvl10_read)
is.na(lvl10_read$r1_i3)
lvl10_read <- lvl10_read %>%
mutate(id = 1:nrow(lvl10_read),
it1_same = ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1 | r2_i1 == r3_i1, 1, NA),
it2_same = ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2 | r2_i2 == r3_i2, 1, NA))
filter(lvl10_read, is.na(it1_same))
filter(lvl10_read, is.na(it1_same) | is.na(it2_same))
print(filter(lvl10_read, is.na(it1_same) | is.na(it2_same)), n = 23)
lvl10_read$cr_it1 <- with(lvl10_read,
ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1, r1_i1,
ifelse(r2_i1 == r3_i1 | is.na(r1_i1), r2_i1, NA))
)
lvl10_read$cr_it2 <- with(lvl10_read,
ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2, r1_i2,
ifelse(r2_i2 == r3_i2 | is.na(r1_i2), r2_i2, NA))
)
# Turn B's into NA values
fix_b <- function(x, val) {
x[x == val] <- NA
x
}
lvl10_read[c('cr_it1', 'cr_it2')] <- lapply(lvl10_read[c('cr_it1', 'cr_it2')],
fix_b, val = 'B')
# split cr items by booklet
lvl10_read_ft <- select(lvl10_read, id, booklet, cr_it1, cr_it2) %>%
data.frame()
tmp3 <- split(lvl10_read_ft, lvl10_read_ft$booklet)
items <- c('cr_it1', 'cr_it2')
tmp6 <- vector("list", length(unique(lvl10_read_ft$booklet)))
for(i in 1:length(tmp3)) {
tmp6[[i]] <- matrix(ncol = 2, nrow = nrow(tmp3[[i]]))
for(k in 1:ncol(tmp6[[i]])) {
tmp6[[i]][, k] <- as.numeric(tmp3[[i]][, k + 2])
}
}
library(magic)
tryR <- data.frame(do.call(adiag, c(tmp6, pad = NA)))
tryR$id <- do.call(c, lapply(1:length(tmp3), function(xx) tmp3[[xx]]$id))
lvl10_read_m <- lvl10_read %>%
left_join(tryR, by = "id") %>%
select(items, num_range('X', 1:4))
write.table(lvl10_read_m, file = "X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/OUT/B/reading/Spr2015_CRGrade4.txt",
sep = '', row.names=FALSE, col.names=FALSE, na="9", quote=FALSE)
library(readr)
library(dplyr)
read_positions_10 <- fwf_positions(c(2, 6, 20, 21, 22, 25, 26, 27, 30, 31, 32, 45),
c(2, 8, 20, 21, 22, 25, 26, 27, 30, 31, 32, 86),
col_names = c('grade', 'booklet',
'r1_i1', 'r1_i2', 'r1_i3',
'r2_i1', 'r2_i2', 'r2_i3',
'r3_i1', 'r3_i2', 'r3_i3', 'items'))
lvl10_read <- read_fwf('X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/DATA/Spring2015Hybrid_Reading.txt',
read_positions_10, col_types = 'nncccccccccc') %>%
filter(grade == '4')
# variable where rater 1 and 2 do not match
lvl10_read <- lvl10_read %>%
mutate(id = 1:nrow(lvl10_read),
it1_same = ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1 | r2_i1 == r3_i1, 1, NA),
it2_same = ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2 | r2_i2 == r3_i2, 1, NA))
# collapse to single rating for those that match
lvl10_read$cr_it1 <- with(lvl10_read,
ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1, r1_i1,
ifelse(r2_i1 == r3_i1 | is.na(r1_i1), r2_i1, NA))
)
lvl10_read$cr_it2 <- with(lvl10_read,
ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2, r1_i2,
ifelse(r2_i2 == r3_i2 | is.na(r1_i2), r2_i2, NA))
)
# Turn B's into NA values
fix_b <- function(x, val) {
x[x == val] <- NA
x
}
lvl10_read[c('cr_it1', 'cr_it2')] <- lapply(lvl10_read[c('cr_it1', 'cr_it2')],
fix_b, val = 'B')
# split cr items by booklet
lvl10_read_ft <- select(lvl10_read, id, booklet, cr_it1, cr_it2) %>%
data.frame()
tmp3 <- split(lvl10_read_ft, lvl10_read_ft$booklet)
items <- c('cr_it1', 'cr_it2')
tmp6 <- vector("list", length(unique(lvl10_read_ft$booklet)))
for(i in 1:length(tmp3)) {
tmp6[[i]] <- matrix(ncol = 2, nrow = nrow(tmp3[[i]]))
for(k in 1:ncol(tmp6[[i]])) {
tmp6[[i]][, k] <- as.numeric(tmp3[[i]][, k + 2])
}
}
library(magic)
tryR <- data.frame(do.call(adiag, c(tmp6, pad = NA)))
tryR$id <- do.call(c, lapply(1:length(tmp3), function(xx) tmp3[[xx]]$id))
lvl10_read_m <- lvl10_read %>%
left_join(tryR, by = "id") %>%
select(items, num_range('X', 1:4))
# Add ID variable
lvl10_read_m <- data.frame(ID = sprintf("%06d", 1:nrow(lvl10_read_m)), lvl10_read_m)
write.table(lvl10_read_m, file = "X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/OUT/B/reading/Spr2015_CRGrade4.dat",
sep = '', row.names=FALSE, col.names=FALSE, na="9", quote=FALSE)
table(lvl10_read_m$X2)
table(lvl10_read_m$X1)
table(lvl10_read_m$X3)
table(lvl10_read_m$X4)
library(readr)
library(dplyr)
read_positions_11 <- fwf_positions(c(2, 6, 20, 21, 22, 25, 26, 27, 30, 31, 32, 45),
c(2, 8, 20, 21, 22, 25, 26, 27, 30, 31, 32, 87),
col_names = c('grade', 'booklet',
'r1_i1', 'r1_i2', 'r1_i3',
'r2_i1', 'r2_i2', 'r2_i3',
'r3_i1', 'r3_i2', 'r3_i3', 'items'))
lvl11_read <- read_fwf('X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/DATA/Spring2015Hybrid_Reading.txt',
read_positions_11, col_types = 'nncccccccccc') %>%
filter(grade == '4')
# variable where rater 1 and 2 do not match
lvl11_read <- lvl11_read %>%
mutate(id = 1:nrow(lvl11_read),
it1_same = ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1 | r2_i1 == r3_i1, 1, NA),
it2_same = ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2 | r2_i2 == r3_i2, 1, NA),
it3_same = ifelse(r1_i3 == r2_i3 | r1_i3 == r3_i3 | r2_i3 == r3_i3, 1, NA))
filter(lvl11_read, is.na(it1_same) | is.na(it2_same) | is.na(it3_same))
library(readr)
library(dplyr)
read_positions_11 <- fwf_positions(c(2, 6, 20, 21, 22, 25, 26, 27, 30, 31, 32, 45),
c(2, 8, 20, 21, 22, 25, 26, 27, 30, 31, 32, 87),
col_names = c('grade', 'booklet',
'r1_i1', 'r1_i2', 'r1_i3',
'r2_i1', 'r2_i2', 'r2_i3',
'r3_i1', 'r3_i2', 'r3_i3', 'items'))
lvl11_read <- read_fwf('X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/DATA/Spring2015Hybrid_Reading.txt',
read_positions_11, col_types = 'nncccccccccc') %>%
filter(grade == '5')
# variable where rater 1 and 2 do not match
lvl11_read <- lvl11_read %>%
mutate(id = 1:nrow(lvl11_read),
it1_same = ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1 | r2_i1 == r3_i1, 1, NA),
it2_same = ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2 | r2_i2 == r3_i2, 1, NA),
it3_same = ifelse(r1_i3 == r2_i3 | r1_i3 == r3_i3 | r2_i3 == r3_i3, 1, NA))
filter(lvl11_read, is.na(it1_same) | is.na(it2_same) | is.na(it3_same))
library(readr)
library(dplyr)
read_positions_11 <- fwf_positions(c(2, 6, 20, 21, 22, 25, 26, 27, 30, 31, 32, 45),
c(2, 8, 20, 21, 22, 25, 26, 27, 30, 31, 32, 87),
col_names = c('grade', 'booklet',
'r1_i1', 'r1_i2', 'r1_i3',
'r2_i1', 'r2_i2', 'r2_i3',
'r3_i1', 'r3_i2', 'r3_i3', 'items'))
lvl11_read <- read_fwf('X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/DATA/Spring2015Hybrid_Reading.txt',
read_positions_11, col_types = 'nncccccccccc') %>%
filter(grade == '5')
# variable where rater 1 and 2 do not match
lvl11_read <- lvl11_read %>%
mutate(id = 1:nrow(lvl11_read),
it1_same = ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1 | r2_i1 == r3_i1, 1, NA),
it2_same = ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2 | r2_i2 == r3_i2, 1, NA),
it3_same = ifelse(r1_i3 == r2_i3 | r1_i3 == r3_i3 | r2_i3 == r3_i3, 1, NA))
# collapse to single rating for those that match
lvl11_read$cr_it1 <- with(lvl11_read,
ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1, r1_i1,
ifelse(r2_i1 == r3_i1 | is.na(r1_i1), r2_i1, NA))
)
lvl11_read$cr_it2 <- with(lvl11_read,
ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2, r1_i2,
ifelse(r2_i2 == r3_i2 | is.na(r1_i2), r2_i2, NA))
)
lvl11_read$cr_it3 <- with(lvl11_read,
ifelse(r1_i3 == r2_i3 | r1_i3 == r3_i3, r1_i3,
ifelse(r2_i3 == r3_i3 | is.na(r1_i3), r2_i3, NA))
)
# Turn B's into NA values
fix_b <- function(x, val) {
x[x == val] <- NA
x
}
lvl11_read[c('cr_it1', 'cr_it2', 'cr_it3')] <- lapply(lvl11_read[c('cr_it1', 'cr_it2', 'cr_it3')],
fix_b, val = 'B')
# split cr items by booklet
lvl11_read_ft <- select(lvl11_read, id, booklet, cr_it1, cr_it2, cr_it3) %>%
data.frame()
tmp3 <- split(lvl11_read_ft, lvl11_read_ft$booklet)
items <- c('cr_it1', 'cr_it2')
tmp6 <- vector("list", length(unique(lvl11_read_ft$booklet)))
for(i in 1:length(tmp3)) {
tmp6[[i]] <- matrix(ncol = 2, nrow = nrow(tmp3[[i]]))
for(k in 1:ncol(tmp6[[i]])) {
tmp6[[i]][, k] <- as.numeric(tmp3[[i]][, k + 2])
}
}
library(magic)
tryR <- data.frame(do.call(adiag, c(tmp6, pad = NA)))
tryR$id <- do.call(c, lapply(1:length(tmp3), function(xx) tmp3[[xx]]$id))
lvl11_read_m <- lvl11_read %>%
left_join(tryR, by = "id") %>%
select(items, num_range('X', 1:6))
# Add ID variable
lvl11_read_m <- data.frame(ID = sprintf("%06d", 1:nrow(lvl11_read_m)), lvl11_read_m)
write.table(lvl11_read_m, file = "X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/OUT/B/reading/Spr2015_CRGrade5.dat",
sep = '', row.names=FALSE, col.names=FALSE, na="9", quote=FALSE)
head(tryR)
lvl11_read_ft <- select(lvl11_read, id, booklet, cr_it1, cr_it2, cr_it3) %>%
data.frame()
tmp3 <- split(lvl11_read_ft, lvl11_read_ft$booklet)
items <- c('cr_it1', 'cr_it2')
tmp6 <- vector("list", length(unique(lvl11_read_ft$booklet)))
for(i in 1:length(tmp3)) {
tmp6[[i]] <- matrix(ncol = 3, nrow = nrow(tmp3[[i]]))
for(k in 1:ncol(tmp6[[i]])) {
tmp6[[i]][, k] <- as.numeric(tmp3[[i]][, k + 2])
}
}
library(magic)
tryR <- data.frame(do.call(adiag, c(tmp6, pad = NA)))
tryR$id <- do.call(c, lapply(1:length(tmp3), function(xx) tmp3[[xx]]$id))
head(tryR)
lvl11_read_m <- lvl11_read %>%
left_join(tryR, by = "id") %>%
select(items, num_range('X', 1:6))
# Add ID variable
lvl11_read_m <- data.frame(ID = sprintf("%06d", 1:nrow(lvl11_read_m)), lvl11_read_m)
write.table(lvl11_read_m, file = "X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/OUT/B/reading/Spr2015_CRGrade5.dat",
sep = '', row.names=FALSE, col.names=FALSE, na="9", quote=FALSE)
library(readr)
library(dplyr)
read_positions_12 <- fwf_positions(c(2, 6, 20, 21, 22, 25, 26, 27, 30, 31, 32, 45),
c(2, 8, 20, 21, 22, 25, 26, 27, 30, 31, 32, 88),
col_names = c('grade', 'booklet',
'r1_i1', 'r1_i2', 'r1_i3',
'r2_i1', 'r2_i2', 'r2_i3',
'r3_i1', 'r3_i2', 'r3_i3', 'items'))
lvl12_read <- read_fwf('X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/DATA/Spring2015Hybrid_Reading.txt',
read_positions_10, col_types = 'nncccccccccc') %>%
filter(grade == '6')
# variable where rater 1 and 2 do not match
lvl12_read <- lvl12_read %>%
mutate(id = 1:nrow(lvl12_read),
it1_same = ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1 | r2_i1 == r3_i1, 1, NA),
it2_same = ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2 | r2_i2 == r3_i2, 1, NA))
# collapse to single rating for those that match
lvl12_read$cr_it1 <- with(lvl12_read,
ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1, r1_i1,
ifelse(r2_i1 == r3_i1 | is.na(r1_i1), r2_i1, NA))
)
lvl12_read$cr_it2 <- with(lvl12_read,
ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2, r1_i2,
ifelse(r2_i2 == r3_i2 | is.na(r1_i2), r2_i2, NA))
)
# Turn B's into NA values
fix_b <- function(x, val) {
x[x == val] <- NA
x
}
lvl12_read[c('cr_it1', 'cr_it2')] <- lapply(lvl12_read[c('cr_it1', 'cr_it2')],
fix_b, val = 'B')
# split cr items by booklet
lvl12_read_ft <- select(lvl12_read, id, booklet, cr_it1, cr_it2) %>%
data.frame()
tmp3 <- split(lvl12_read_ft, lvl12_read_ft$booklet)
items <- c('cr_it1', 'cr_it2')
tmp6 <- vector("list", length(unique(lvl12_read_ft$booklet)))
for(i in 1:length(tmp3)) {
tmp6[[i]] <- matrix(ncol = 2, nrow = nrow(tmp3[[i]]))
for(k in 1:ncol(tmp6[[i]])) {
tmp6[[i]][, k] <- as.numeric(tmp3[[i]][, k + 2])
}
}
library(magic)
tryR <- data.frame(do.call(adiag, c(tmp6, pad = NA)))
tryR$id <- do.call(c, lapply(1:length(tmp3), function(xx) tmp3[[xx]]$id))
lvl12_read_m <- lvl12_read %>%
left_join(tryR, by = "id") %>%
select(items, num_range('X', 1:4))
# Add ID variable
lvl12_read_m <- data.frame(ID = sprintf("%06d", 1:nrow(lvl12_read_m)), lvl12_read_m)
write.table(lvl12_read_m, file = "X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/OUT/B/reading/Spr2015_CRGrade6.dat",
sep = '', row.names=FALSE, col.names=FALSE, na="9", quote=FALSE)
library(readr)
library(dplyr)
read_positions_12 <- fwf_positions(c(2, 6, 20, 21, 22, 25, 26, 27, 30, 31, 32, 45),
c(2, 8, 20, 21, 22, 25, 26, 27, 30, 31, 32, 88),
col_names = c('grade', 'booklet',
'r1_i1', 'r1_i2', 'r1_i3',
'r2_i1', 'r2_i2', 'r2_i3',
'r3_i1', 'r3_i2', 'r3_i3', 'items'))
lvl12_read <- read_fwf('X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/DATA/Spring2015Hybrid_Reading.txt',
read_positions_12, col_types = 'nncccccccccc') %>%
filter(grade == '6')
# variable where rater 1 and 2 do not match
lvl12_read <- lvl12_read %>%
mutate(id = 1:nrow(lvl12_read),
it1_same = ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1 | r2_i1 == r3_i1, 1, NA),
it2_same = ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2 | r2_i2 == r3_i2, 1, NA))
# collapse to single rating for those that match
lvl12_read$cr_it1 <- with(lvl12_read,
ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1, r1_i1,
ifelse(r2_i1 == r3_i1 | is.na(r1_i1), r2_i1, NA))
)
lvl12_read$cr_it2 <- with(lvl12_read,
ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2, r1_i2,
ifelse(r2_i2 == r3_i2 | is.na(r1_i2), r2_i2, NA))
)
# Turn B's into NA values
fix_b <- function(x, val) {
x[x == val] <- NA
x
}
lvl12_read[c('cr_it1', 'cr_it2')] <- lapply(lvl12_read[c('cr_it1', 'cr_it2')],
fix_b, val = 'B')
# split cr items by booklet
lvl12_read_ft <- select(lvl12_read, id, booklet, cr_it1, cr_it2) %>%
data.frame()
tmp3 <- split(lvl12_read_ft, lvl12_read_ft$booklet)
items <- c('cr_it1', 'cr_it2')
tmp6 <- vector("list", length(unique(lvl12_read_ft$booklet)))
for(i in 1:length(tmp3)) {
tmp6[[i]] <- matrix(ncol = 2, nrow = nrow(tmp3[[i]]))
for(k in 1:ncol(tmp6[[i]])) {
tmp6[[i]][, k] <- as.numeric(tmp3[[i]][, k + 2])
}
}
library(magic)
tryR <- data.frame(do.call(adiag, c(tmp6, pad = NA)))
tryR$id <- do.call(c, lapply(1:length(tmp3), function(xx) tmp3[[xx]]$id))
lvl12_read_m <- lvl12_read %>%
left_join(tryR, by = "id") %>%
select(items, num_range('X', 1:4))
# Add ID variable
lvl12_read_m <- data.frame(ID = sprintf("%06d", 1:nrow(lvl12_read_m)), lvl12_read_m)
write.table(lvl12_read_m, file = "X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/OUT/B/reading/Spr2015_CRGrade6.dat",
sep = '', row.names=FALSE, col.names=FALSE, na="9", quote=FALSE)
library(readr)
library(dplyr)
read_positions_13 <- fwf_positions(c(2, 6, 20, 21, 22, 25, 26, 27, 30, 31, 32, 45),
c(2, 8, 20, 21, 22, 25, 26, 27, 30, 31, 32, 89),
col_names = c('grade', 'booklet',
'r1_i1', 'r1_i2', 'r1_i3',
'r2_i1', 'r2_i2', 'r2_i3',
'r3_i1', 'r3_i2', 'r3_i3', 'items'))
lvl13_read <- read_fwf('X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/DATA/Spring2015Hybrid_Reading.txt',
read_positions_13, col_types = 'nncccccccccc') %>%
filter(grade == '7')
# variable where rater 1 and 2 do not match
lvl13_read <- lvl13_read %>%
mutate(id = 1:nrow(lvl13_read),
it1_same = ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1 | r2_i1 == r3_i1, 1, NA),
it2_same = ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2 | r2_i2 == r3_i2, 1, NA))
# collapse to single rating for those that match
lvl13_read$cr_it1 <- with(lvl13_read,
ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1, r1_i1,
ifelse(r2_i1 == r3_i1 | is.na(r1_i1), r2_i1, NA))
)
lvl13_read$cr_it2 <- with(lvl13_read,
ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2, r1_i2,
ifelse(r2_i2 == r3_i2 | is.na(r1_i2), r2_i2, NA))
)
lvl13_read$cr_it3 <- with(lvl11_read,
ifelse(r1_i3 == r2_i3 | r1_i3 == r3_i3, r1_i3,
ifelse(r2_i3 == r3_i3 | is.na(r1_i3), r2_i3, NA))
)
lvl13_read$cr_it3 <- with(lvl13_read,
ifelse(r1_i3 == r2_i3 | r1_i3 == r3_i3, r1_i3,
ifelse(r2_i3 == r3_i3 | is.na(r1_i3), r2_i3, NA))
)
# Turn B's into NA values
fix_b <- function(x, val) {
x[x == val] <- NA
x
}
lvl13_read[c('cr_it1', 'cr_it2', 'cr_it3')] <- lapply(lvl13_read[c('cr_it1', 'cr_it2', 'cr_it3')],
fix_b, val = 'B')
lvl13_read_ft <- select(lvl13_read, id, booklet, cr_it1, cr_it2) %>%
data.frame()
tmp3 <- split(lvl13_read_ft, lvl13_read_ft$booklet)
items <- c('cr_it1', 'cr_it2', 'cr_it3')
tmp6 <- vector("list", length(unique(lvl13_read_ft$booklet)))
for(i in 1:length(tmp3)) {
tmp6[[i]] <- matrix(ncol = 3, nrow = nrow(tmp3[[i]]))
for(k in 1:ncol(tmp6[[i]])) {
tmp6[[i]][, k] <- as.numeric(tmp3[[i]][, k + 2])
}
}
library(magic)
tryR <- data.frame(do.call(adiag, c(tmp6, pad = NA)))
tryR$id <- do.call(c, lapply(1:length(tmp3), function(xx) tmp3[[xx]]$id))
head(tmp3)
head(tmp3[[1]])
head(tmp3[[2]])
head(lvl13_read)
lvl13_read_ft <- select(lvl13_read, id, booklet, cr_it1, cr_it2, cr_it3) %>%
data.frame()
tmp3 <- split(lvl13_read_ft, lvl13_read_ft$booklet)
items <- c('cr_it1', 'cr_it2', 'cr_it3')
tmp6 <- vector("list", length(unique(lvl13_read_ft$booklet)))
for(i in 1:length(tmp3)) {
tmp6[[i]] <- matrix(ncol = 3, nrow = nrow(tmp3[[i]]))
for(k in 1:ncol(tmp6[[i]])) {
tmp6[[i]][, k] <- as.numeric(tmp3[[i]][, k + 2])
}
}
library(magic)
tryR <- data.frame(do.call(adiag, c(tmp6, pad = NA)))
tryR$id <- do.call(c, lapply(1:length(tmp3), function(xx) tmp3[[xx]]$id))
lvl13_read_m <- lvl13_read %>%
left_join(tryR, by = "id") %>%
select(items, num_range('X', 1:6))
head(tryR)
summary(tryR)
lvl13_read_m <- data.frame(ID = sprintf("%06d", 1:nrow(lvl13_read_m)), lvl13_read_m)
write.table(lvl13_read_m, file = "X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/OUT/B/reading/Spr2015_CRGrade7.dat",
sep = '', row.names=FALSE, col.names=FALSE, na="9", quote=FALSE)
library(readr)
library(dplyr)
read_positions_14 <- fwf_positions(c(2, 6, 20, 21, 22, 25, 26, 27, 30, 31, 32, 45),
c(2, 8, 20, 21, 22, 25, 26, 27, 30, 31, 32, 90),
col_names = c('grade', 'booklet',
'r1_i1', 'r1_i2', 'r1_i3',
'r2_i1', 'r2_i2', 'r2_i3',
'r3_i1', 'r3_i2', 'r3_i3', 'items'))
lvl14_read <- read_fwf('X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/DATA/Spring2015Hybrid_Reading.txt',
read_positions_14, col_types = 'nncccccccccc') %>%
filter(grade == '8')
# variable where rater 1 and 2 do not match
lvl14_read <- lvl14_read %>%
mutate(id = 1:nrow(lvl14_read),
it1_same = ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1 | r2_i1 == r3_i1, 1, NA),
it2_same = ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2 | r2_i2 == r3_i2, 1, NA))
# collapse to single rating for those that match
lvl14_read$cr_it1 <- with(lvl14_read,
ifelse(r1_i1 == r2_i1 | r1_i1 == r3_i1, r1_i1,
ifelse(r2_i1 == r3_i1 | is.na(r1_i1), r2_i1, NA))
)
lvl14_read$cr_it2 <- with(lvl14_read,
ifelse(r1_i2 == r2_i2 | r1_i2 == r3_i2, r1_i2,
ifelse(r2_i2 == r3_i2 | is.na(r1_i2), r2_i2, NA))
)
# Turn B's into NA values
fix_b <- function(x, val) {
x[x == val] <- NA
x
}
lvl14_read[c('cr_it1', 'cr_it2')] <- lapply(lvl14_read[c('cr_it1', 'cr_it2')],
fix_b, val = 'B')
# split cr items by booklet
lvl14_read_ft <- select(lvl14_read, id, booklet, cr_it1, cr_it2) %>%
data.frame()
tmp3 <- split(lvl14_read_ft, lvl14_read_ft$booklet)
items <- c('cr_it1', 'cr_it2')
tmp6 <- vector("list", length(unique(lvl14_read_ft$booklet)))
for(i in 1:length(tmp3)) {
tmp6[[i]] <- matrix(ncol = 2, nrow = nrow(tmp3[[i]]))
for(k in 1:ncol(tmp6[[i]])) {
tmp6[[i]][, k] <- as.numeric(tmp3[[i]][, k + 2])
}
}
library(magic)
tryR <- data.frame(do.call(adiag, c(tmp6, pad = NA)))
tryR$id <- do.call(c, lapply(1:length(tmp3), function(xx) tmp3[[xx]]$id))
lvl14_read_m <- lvl14_read %>%
left_join(tryR, by = "id") %>%
select(items, num_range('X', 1:2))
# Add ID variable
lvl14_read_m <- data.frame(ID = sprintf("%06d", 1:nrow(lvl14_read_m)), lvl14_read_m)
write.table(lvl14_read_m, file = "X:/special projects/Working Group 2/Calibration Next Generation/Tryouts6/OUT/B/reading/Spr2015_CRGrade8.dat",
sep = '', row.names=FALSE, col.names=FALSE, na="9", quote=FALSE)
