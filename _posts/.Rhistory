den
den <- sapply(1:numtheta, function(yy)  sum(exp(alpha*(theta[yy] - gamma))))
den
sum(exp(alpha*(700-gamma)))
exp(alpha*(theta[yy] - gamma))
exp(alpha*(theta[1] - gamma))
exp(-93)
500-gamma[,2]
alpha*(500-gamma[,2])
exp(-1.74)
alpha*(theta[1] - gamma)
cumsum(alpha*(theta[1] - gamma))
exp(cumsum(alpha*(theta[1] - gamma)))
den[1]
num <- sapply(1:numtheta, function(yy) exp(cumsum(alpha*(theta[yy] - gamma))))
num
den
exp(cumsum(alpha*(theta[2] - gamma)))
alpha*(theta[2] - gamma)
alpha*(theta[3] - gamma)
den
den <- sapply(1:numtheta, function(yy)  sum(exp(cumsum(alpha*(theta[yy] - gamma)))))
den
prob <- sapply(1:numtheta, function(yy) num[, yy]/den[yy])
prob
apply(prob, 2, sum)
apply(prob, 1, sum)
apply(prob, 2, sum)
theta <- seq(400, 800, by = 5)
length(theta)
numcat <- ncol(gamma) + 1
numtheta <- length(theta)
gamma <- cbind(0, gamma)
den <- sapply(1:numtheta, function(yy)  sum(exp(cumsum(alpha*(theta[yy] - gamma)))))
num <- sapply(1:numtheta, function(yy) exp(cumsum(alpha*(theta[yy] - gamma))))
prob <- sapply(1:numtheta, function(yy) num[, yy]/den[yy])
prob
gamma
gamma <- gamma[-1]
gamma
den <- sapply(1:numtheta, function(yy)  sum(exp(cumsum(alpha*(theta[yy] - gamma)))))
num <- sapply(1:numtheta, function(yy) exp(cumsum(alpha*(theta[yy] - gamma))))
prob <- sapply(1:numtheta, function(yy) num[, yy]/den[yy])
prob
t(prob)
prob <- cbind(t(sapply(1:numtheta, function(yy) num[, yy]/den[yy])), theta)
prob
names(prob) <- c("prob1", "prob2", "prob3", "theta")
paste("prob", numcat, sep = "")
numcat
paste("prob", 1:numcat, sep = "")
numcat <- 3
paste("prob", 1:numcat, sep = "")
names(prob) <- c(paste("prob", 1:numcat, sep = ""), "theta")
head(prob)
names(prob) <- c(eval(quote(paste("prob", 1:numcat, sep = ""))), "theta")
head(prob)
colnames(prob) <- c(paste("prob", 1:numcat, sep = ""), "theta")
head(prob)
alpha <- c(0.010982, 0.012376)
alpha*75
gamma <- matrix(c(593.3208, 661.5533, 639.6435, 703.384), byrow = TRUE, ncol = 2)
gamma
pcmprob <- function(theta, alpha, gamma) {
numcat <- ncol(gamma) + 1
numtheta <- length(theta)
gamma <- cbind(0, gamma)
den <- sapply(1:numtheta, function(yy)  sum(exp(cumsum(alpha*(theta[yy] - gamma)))))
num <- sapply(1:numtheta, function(yy) exp(cumsum(alpha*(theta[yy] - gamma))))
prob <- cbind(t(sapply(1:numtheta, function(yy) num[, yy]/den[yy])), theta)
colnames(prob) <- c(paste("prob", 1:numcat, sep = ""), "theta")
prob
}
pcmprob(theta, alpha, gamma)
numcat <- ncol(gamma) + 1
numtheta <- length(theta)
gamma <- cbind(0, gamma)
den <- sapply(1:numtheta, function(yy)  sum(exp(cumsum(alpha*(theta[yy] - gamma)))))
den
gamma
alpha
theta[1] - gamma
alpha*(theta[1] - gamma)
alpha
.010982*400
.012376*400
cumsum(alpha*(theta[1] - gamma))
apply(alpha*(theta[1] - gamma), 1, cumsum)
t(apply(alpha*(theta[1] - gamma), 1, cumsum))
den <- sapply(1:numtheta, function(yy)  sum(exp(apply(alpha*(theta[yy] - gamma), 1, cumsum))))
den
apply(alpha*(theta[yy] - gamma), 1, cumsum)
t(apply(alpha*(theta[1] - gamma), 1, cumsum))
exp(t(apply(alpha*(theta[1] - gamma), 1, cumsum)))
apply(exp(t(apply(alpha*(theta[1] - gamma), 1, cumsum))), 1, sum)
den <- sapply(1:numtheta, function(yy)
apply(exp(t(apply(alpha*(theta[yy] - gamma), 1, cumsum))), 1, sum))
apply(exp(t(apply(alpha*(theta[1] - gamma), 1, cumsum))), 1, sum)
den
den <- sapply(1:numtheta, function(yy)
t(apply(exp(t(apply(alpha*(theta[yy] - gamma), 1, cumsum))), 1, sum)))
den
num <- sapply(1:numtheta, function(yy) exp(apply(alpha*(theta[yy] - gamma), 1, cumsum)))
num
apply(alpha*(theta[1] - gamma), 1, cumsum)
t(apply(alpha*(theta[1] - gamma), 1, cumsum))
exp(t(apply(alpha*(theta[1] - gamma), 1, cumsum)))
num[, yy]/den[yy]
num <- sapply(1:numtheta, function(yy) exp(t(apply(alpha*(theta[yy] - gamma), 1, cumsum))))
num
den
num <- lapply(1:numtheta, function(yy) exp(t(apply(alpha*(theta[yy] - gamma), 1, cumsum))))
num
num[[1]]/den[1]
den[1]
den[,1]
num[[1]]/den[,1]
num[[1]]
80-91
80/91
141/148
7.27/148
lapply(1:numtheta, function(yy) num[[yy]]/den[,yy]))
lapply(1:numtheta, function(yy) num[[yy]]/den[,yy])
prob
pcmprob <- function(theta, alpha, gamma) {
numcat <- ncol(gamma) + 1
numtheta <- length(theta)
gamma <- cbind(0, gamma)
den <- sapply(1:numtheta, function(yy)  sum(exp(cumsum(alpha*(theta[yy] - gamma)))))
num <- sapply(1:numtheta, function(yy) exp(cumsum(alpha*(theta[yy] - gamma))))
prob <- cbind(t(sapply(1:numtheta, function(yy) num[, yy]/den[yy])), theta)
colnames(prob) <- c(paste("prob", 1:numcat, sep = ""), "theta")
prob
}
alpha <- .012376
gamma <- matrix(c(639.6435, 703.384), ncol = 2)
pcmprob(theta, alpha, gamma)
alpha <- .010982
gamma <- matrix(c(593.3208, 661.5533), ncol = 2)
pcmprob(theta, alpha, gamma)
alpha <- c(0.010982, 0.012376)
gamma <- matrix(c(593.3208, 661.5533, 639.6435, 703.384), byrow = TRUE, ncol = 2)
numcat <- ncol(gamma) + 1
numtheta <- length(theta)
gamma <- cbind(0, gamma)
den <- sapply(1:numtheta, function(yy)
apply(exp(apply(alpha*(theta[yy] - gamma), 1, cumsum)), 1, sum))
num <- sapply(1:numtheta, function(yy)
exp(apply(alpha*(theta[yy] - gamma), 1, cumsum)))
den
den <- sapply(1:numtheta, function(yy)
apply(exp(t(apply(alpha*(theta[yy] - gamma), 1, cumsum))), 1, sum))
den
num
num <- lapply(1:numtheta, function(yy)
exp(apply(alpha*(theta[yy] - gamma), 1, cumsum)))
num
prob <- lapply(1:numtheta, function(yy) num[[yy]]/den[,yy])
prob
den
num
num[[1]][,1]/den[1,1]
sum(num[[1]][,1]/den[1,1])
num <- lapply(1:numtheta, function(yy)
exp(t(apply(alpha*(theta[yy] - gamma), 1, cumsum))))
num
prob <- lapply(1:numtheta, function(yy) num[[yy]]/den[,yy])
head(prob)
rowSums(prob[[1]])
itemnum <- function(x) { x$item <- paste0("item", 1:nrow(x))}
lapply(prob, itemnum)
warnings()
itemnum <- function(x) { cbind(x, paste0("item", 1:nrow(x)))}
lapply(prob, itemnum)
prob <- do.call("rbind", prob)
colnames(prob) <- paste0("prob", 1:numcat)
prob
prob$item <- rep(paste0("item", 1:length(alpha)))
rep(paste0("item", 1:length(alpha)))
prob$item <- rep(paste0("item", 1:length(alpha)), numtheta)
prob
prob <- lapply(1:numtheta, function(yy) num[[yy]]/den[,yy])
prob <- do.call("rbind", prob)
colnames(prob) <- paste0("prob", 1:numcat)
prob$item <- rep(paste0("item", 1:length(alpha)), numtheta)
prob <- lapply(1:numtheta, function(yy) num[[yy]]/den[,yy])
prob <- do.call("rbind", prob)
colnames(prob) <- paste0("prob", 1:numcat)
str(prob)
prob <- data.frame(do.call("rbind", prob))
prob <- lapply(1:numtheta, function(yy) num[[yy]]/den[,yy])
prob <- data.frame(do.call("rbind", prob))
colnames(prob) <- paste0("prob", 1:numcat)
prob$item <- rep(paste0("item", 1:length(alpha)), numtheta)
head(prob)
prob$theta <- rep(theta, each = length(alpha))
head(prob)
cbind(num[[1]]/den[,1], theta[1])
prob <- lapply(1:numtheta, function(yy) cbind(num[[yy]]/den[,yy], theta[yy],
paste0("item", 1:length(alpha))))
head(prob)
prob <- lapply(1:numtheta, function(yy) cbind(num[[yy]]/den[,yy], theta[yy]))
head(prob)
prob <- lapply(1:numtheta, function(yy) num[[yy]]/den[,yy])
prob <- data.frame(do.call("rbind", prob))
colnames(prob) <- c(paste0("prob", 1:numcat), "theta", "item")
prob$item <- rep(paste0("item", 1:length(alpha)), numtheta)
prob$theta <- rep(theta, each = length(alpha))
prob
prob <- lapply(1:numtheta, function(yy) num[[yy]]/den[,yy])
prob <- data.frame(do.call("rbind", prob))
colnames(prob) <- paste0("prob", 1:numcat)
prob$item <- rep(paste0("item", 1:length(alpha)), numtheta)
prob$theta <- rep(theta, each = length(alpha))
prob
?cumsum
pcmprob <- function(theta, alpha, gamma) {
numcat <- ncol(gamma) + 1
numtheta <- length(theta)
gamma <- cbind(0, gamma)
den <- sapply(1:numtheta, function(yy)
apply(exp(t(apply(alpha*(theta[yy] - gamma), 1, cumsum))), 1, sum))
num <- lapply(1:numtheta, function(yy)
exp(t(apply(alpha*(theta[yy] - gamma), 1, cumsum))))
prob <- lapply(1:numtheta, function(yy) num[[yy]]/den[,yy])
prob <- data.frame(do.call("rbind", prob))
colnames(prob) <- paste0("prob", 1:numcat)
prob$item <- rep(paste0("item", 1:length(alpha)), numtheta)
prob$theta <- rep(theta, each = length(alpha))
prob
}
gr5 <- read.csv("Z:/special projects/Working Group 2/Calibration Next Generation/missouri/B/Missouri_grade5_itempool.csv")
gr8 <- read.csv("Z:/special projects/Working Group 2/Calibration Next Generation/missouri/B/Missouri_grade8_itempool.csv")
head(gr5)
head(gr8)
prob
gamma
head(gr5)
alphagr5.2 <- subset(gr5, Max == 2, select = a)
alphagr5.2
nrow(alphagr5.2)
# creating alpha/gamma
alphagr5.2 <- subset(gr5, Max == 2, select = a)
alphagr5.4 <- subset(gr5, Max == 4, select = a)
alphagr8.2 <- subset(gr8, Max == 2, select = a)
alphagr8.4 <- subset(gr8, Max == 4, select = a)
gamma5.2 <- subset(gr5, Max == 2, select = c(b1, b2))
gamma5.4 <- subset(gr5, Max == 4, select = c(b1, b2, b3, b4))
gamma8.2 <- subset(gr8, Max == 2, select = c(b1, b2))
gamma8.4 <- subset(gr8, Max == 4, select = c(b1, b2, b3, b4))
gamma5.2 <- subset(gr5, Max == 2, select = c(b, b2))
gamma5.4 <- subset(gr5, Max == 4, select = c(b, b2, b3, b4))
gr5 <- read.csv("Z:/special projects/Working Group 2/Calibration Next Generation/missouri/B/Missouri_grade5_itempool.csv")
gr8 <- read.csv("Z:/special projects/Working Group 2/Calibration Next Generation/missouri/B/Missouri_grade8_itempool.csv")
# creating alpha/gamma
alphagr5.2 <- subset(gr5, Max == 2, select = a)
alphagr5.4 <- subset(gr5, Max == 4, select = a)
alphagr8.2 <- subset(gr8, Max == 2, select = a)
alphagr8.4 <- subset(gr8, Max == 4, select = a)
gamma5.2 <- subset(gr5, Max == 2, select = c(b, b2))
gamma5.4 <- subset(gr5, Max == 4, select = c(b, b2, b3, b4))
gamma8.2 <- subset(gr8, Max == 2, select = c(b1, b2))
gamma8.4 <- subset(gr8, Max == 4, select = c(b1, b2, b3, b4))
# Read in files
gr5 <- read.csv("Z:/special projects/Working Group 2/Calibration Next Generation/missouri/B/Missouri_grade5_itempool.csv")
gr8 <- read.csv("Z:/special projects/Working Group 2/Calibration Next Generation/missouri/B/Missouri_grade8_itempool.csv")
# creating alpha/gamma
alphagr5.2 <- subset(gr5, Max == 2, select = a)
alphagr5.4 <- subset(gr5, Max == 4, select = a)
alphagr8.2 <- subset(gr8, Max == 2, select = a)
alphagr8.4 <- subset(gr8, Max == 4, select = a)
gamma5.2 <- subset(gr5, Max == 2, select = c(b1, b2))
gamma5.4 <- subset(gr5, Max == 4, select = c(b1, b2, b3, b4))
gamma8.2 <- subset(gr8, Max == 2, select = c(b1, b2))
gamma8.4 <- subset(gr8, Max == 4, select = c(b1, b2, b3, b4))
theta <- seq(400, 1000, by = 5)
# creating alpha/gamma
alpha5.2 <- subset(gr5, Max == 2, select = a)
alpha5.4 <- subset(gr5, Max == 4, select = a)
alpha8.2 <- subset(gr8, Max == 2, select = a)
alpha8.4 <- subset(gr8, Max == 4, select = a)
gamma5.2 <- subset(gr5, Max == 2, select = c(b1, b2))
gamma5.4 <- subset(gr5, Max == 4, select = c(b1, b2, b3, b4))
gamma8.2 <- subset(gr8, Max == 2, select = c(b1, b2))
gamma8.4 <- subset(gr8, Max == 4, select = c(b1, b2, b3, b4))
# computing probabilities
theta <- seq(400, 1000, by = 5)
pcmprob(theta, alpha = alpha5.2, gamma = gamma5.2)
nrow(alpha5.2)
nrow(gamma5.2)
alpha <- alpha5.2
gamma <- matrix(gamma5.2)
pcmprob(theta, alpha, gamma)
str(gamma)
gamma5.2 <- subset(gr5, Max == 2, select = c(b1, b2))
str(gamma5.2)
# Read in files
gr5 <- read.csv("Z:/special projects/Working Group 2/Calibration Next Generation/missouri/B/Missouri_grade5_itempool.csv")
gr8 <- read.csv("Z:/special projects/Working Group 2/Calibration Next Generation/missouri/B/Missouri_grade8_itempool.csv")
# creating alpha/gamma
alpha5.2 <- subset(gr5, Max == 2, select = a)
alpha5.4 <- subset(gr5, Max == 4, select = a)
alpha8.2 <- subset(gr8, Max == 2, select = a)
alpha8.4 <- subset(gr8, Max == 4, select = a)
gamma5.2 <- subset(gr5, Max == 2, select = c(b1, b2))
gamma5.4 <- subset(gr5, Max == 4, select = c(b1, b2, b3, b4))
gamma8.2 <- subset(gr8, Max == 2, select = c(b1, b2))
gamma8.4 <- subset(gr8, Max == 4, select = c(b1, b2, b3, b4))
# computing probabilities
theta <- seq(400, 1000, by = 5)
pcmprob(theta, alpha = alpha5.2, gamma = gamma5.2)
str(gamma5.2)
gamma5.2)
gamma5.2
alpha5.2
str(alpha5.2)
pcmprob(theta, alpha5.2$a, as.matrix(gamma5.2))
gr5.2 <- pcmprob(theta, alpha = alpha5.2$a, gamma = as.matrix(gamma5.2))
nrow(gr5.2)
52*length(theta)
gr5.4 <- pcmprob(theta, alpha = alpha5.4$a, gamma = as.matrix(gamma5.4))
gr5.4
alpha5.4
gr8.2 <- pcmprob(theta, alpha = alpha8.2$a, gamma = as.matrix(gamma8.2))
gr8.4 <- pcmprob(theta, alpha = alpha8.4$a, gamma = as.matrix(gamma8.4))
nrow(gr8.2)
nrow(gr8.4)
head(gr5.2)
p <- ggplot(gr5.2, aes(x = theta, y = prob1)) + theme_bw()
p + geom_line()
library(ggplot2)
p <- ggplot(gr5.2, aes(x = theta, y = prob1)) + theme_bw()
p + geom_line()
p <- ggplot(subset(gr5.2, item == "item1"), aes(x = theta, y = prob1)) + theme_bw()
p + geom_line()
p + geom_line() + geom_line(aes(x = theta, y = prob2), linetype = 2) +
geom_line(aes(x = theta, y = prob3), linetype = 3)
p + geom_line(size = 1) + geom_line(aes(x = theta, y = prob2), linetype = 2, size = 1) +
geom_line(aes(x = theta, y = prob3), linetype = 3, size = 1)
write.csv(gr5.2, file = "Z:/special projects/Working Group 2/Calibration Next Generation/missouri/B/grade5.2Prob.csv",
include.rownames = FALSE)
write.csv(gr5.2, file = "Z:/special projects/Working Group 2/Calibration Next Generation/missouri/B/grade5.2Prob.csv",
row.names = FALSE)
.01867*(400-0)
exp(7.468)
.01867*(400 - 593.3208)
gr5 <- read.csv("Z:/special projects/Working Group 2/Calibration Next Generation/missouri/B/Missouri_grade5_itempool.csv")
alpha5.2 <- subset(gr5, Max == 2, select = c(a, Parm1))
gamma5.2 <- subset(gr5, Max == 2, select = c(b1, b2))
theta <- seq(400, 1000, by = 5)
gr5.2 <- pcmprob(theta, alpha = alpha5.2$a, gamma = as.matrix(gamma5.2))
head(gr5.2)
gr5.2 <- pcmprob(theta, alpha = alpha5.2$Parm1, gamma = as.matrix(gamma5.2))
head(gr5.2)
gr5.2$score <- with(gr5.2, 1*prob2 + 2*prob3)
head(gr5.2)
head(gr5)
gamma5.2 <- subset(gr5, Max == 2, select = c(b1, b2, Parm2, Parm3))
gamma5.2 <- subset(gr5, Max == 2, select = c(Parm2, Parm3))
gr5.2 <- pcmprob(theta, alpha = alpha5.2$Parm1, gamma = as.matrix(gamma5.2))
head(gr5.2)
gamma5.2 <- subset(gr5, Max == 2, select = c(b1, b2))
gr5.2 <- pcmprob(theta, alpha = alpha5.2$Parm1, gamma = as.matrix(gamma5.2))
head(gr5.2)
p <- ggplot(subset(gr5.2, item == "item1"), aes(x = theta, y = prob1)) + theme_bw()
p + geom_line(size = 1) + geom_line(aes(x = theta, y = prob2), linetype = 2, size = 1) +
geom_line(aes(x = theta, y = prob3), linetype = 3, size = 1)
gr5.2 <- pcmprob(theta, alpha = alpha5.2$a, gamma = as.matrix(gamma5.2))
p <- ggplot(subset(gr5.2, item == "item1"), aes(x = theta, y = prob1)) + theme_bw()
p + geom_line(size = 1) + geom_line(aes(x = theta, y = prob2), linetype = 2, size = 1) +
geom_line(aes(x = theta, y = prob3), linetype = 3, size = 1)
gr5.2$score <- with(gr5.2, 1*prob2 + 2*prob3)
head(gr5.2)
tail(gr5.2)
install.packages("rjson")
library(rjson)
json_file <- "C:/Users/bleb/Downloads/Takeout/Location History/LocationHistory.json"
json_data <- fromJSON(file = json_file)
str(json_data)
do.call("rbind", json_data)
head(do.call("rbind", json_data))
json_data[[1]]
json_data[[2]]
do.call("rbind", json_data[[2]])
head(do.call("rbind", json_data[[2]]))
json_data[[3]]
nrow(do.call("rbind", json_data[[2]]))
tail(do.call("rbind", json_data[[2]]))
latlong <- do.call("rbind", json_data[[2]])
latlong2 <- subset(latlong, select = c(latitudeE7, longitudeE7))
head(latlong2)
as.character(latlong2$latitudeE7)
as.character(latlong2$latitudeE7[1])
str(latlong2)
latlong2 <- data.frame(latlong2)
as.character(latlong2$latitudeE7[1])
substr(as.character(latlong2$latitudeE7[1]), 1, 2)
as.numeric(paste0(substr(as.character(latlong2$latitudeE7[1]), 1, 2), ".", substr(as.character(latlong2$latitudeE7[1]), 3, 4)))
latlong2$latR <- as.numeric(paste0(substr(as.character(latlong2$latitudeE7[1]), 1, 2), ".", substr(as.character(latlong2$latitudeE7[1]), 3, 4)))
head(latlong2)
latlong2$longR <- as.numeric(paste0(substr(as.character(latlong2$longitudeE7[1]), 1, 3), ".", substr(as.character(latlong2$longitudeE7[1]), 4, 5)))
head(latlong2)
install.packages("maps")
library(maps)
library(ggplot)
library(ggplot2)
?map_data
states <- map_data("state")
p <- ggplot(states, aes(x = long, y = lat)) + geom_polygon() + theme_bw()
p
p <- ggplot(states, aes(x = long, y = lat, group = group)) + geom_polygon() + theme_bw()
p
head(states)
p <- ggplot(states, aes(x = long, y = lat, group = group, color = "black")) + geom_polygon() + theme_bw()
p
p <- ggplot(states, aes(x = long, y = lat, group = group, color = "white")) + geom_polygon() + theme_bw()
p
p <- ggplot(states, aes(x = long, y = lat, group = group, color = "white", fill = "white")) + geom_polygon() + theme_bw()
p
p <- ggplot(states, aes(x = long, y = lat, group = group, fill = "white")) + geom_polygon() + theme_bw()
p
p <- ggplot(states, aes(x = long, y = lat, group = group, color = "white")) + geom_polygon() + theme_bw()
p
p <- ggplot(states, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + theme_bw()
p
p + geom_point(data = latlong2, aes(x = longR, y = latR), alpha = .1)
p <- ggplot(states) + geom_polygon(aes(x = long, y = lat, group = group), fill = "white", color = "black") + theme_bw()
p + geom_point(data = latlong2, aes(x = longR, y = latR), alpha = .1)
p + geom_point(data = latlong2, aes(x = longR, y = latR), alpha = .1, color = "red", size = 3)
latlong2$latR <- as.numeric(paste0(substr(as.character(latlong2$latitudeE7), 1, 2), ".", substr(as.character(latlong2$latitudeE7), 3, 4)))
latlong2$longR <- as.numeric(paste0(substr(as.character(latlong2$longitudeE7), 1, 3), ".", substr(as.character(latlong2$longitudeE7), 4, 5)))
p <- ggplot(states) + geom_polygon(aes(x = long, y = lat, group = group), fill = "white", color = "black") + theme_bw()
p + geom_point(data = latlong2, aes(x = longR, y = latR), alpha = .1, color = "red", size = 3)
p + geom_point(data = latlong2, aes(x = longR, y = latR), alpha = .01, color = "red", size = 3)
json_file <- "C:/Users/bleb/Downloads/Takeout/Location History/LocationHistory.json"
library(rjson)
json_data <- fromJSON(file = json_file)
latlong <- do.call("rbind", json_data[[2]])
latlong2 <- subset(latlong, select = c(latitudeE7, longitudeE7))
latlong2$latR <- as.numeric(paste0(substr(as.character(latlong2$latitudeE7), 1, 2),
".", substr(as.character(latlong2$latitudeE7), 3, 4)))
latlong2$longR <- as.numeric(paste0(substr(as.character(latlong2$longitudeE7), 1, 3),
".", substr(as.character(latlong2$longitudeE7), 4, 5)))
library(maps)
library(ggplot2)
states <- map_data("state")
p <- ggplot(states) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
theme_bw()
p + geom_point(data = latlong2, aes(x = longR, y = latR),
alpha = .01, color = "red", size = 3)
head(latlong2)
head(latlong)
latlong <- data.frame(do.call("rbind", json_data[[2]]))
latlong2 <- subset(latlong, select = c(latitudeE7, longitudeE7))
latlong2$latR <- as.numeric(paste0(substr(as.character(latlong2$latitudeE7), 1, 2),
".", substr(as.character(latlong2$latitudeE7), 3, 4)))
latlong2$longR <- as.numeric(paste0(substr(as.character(latlong2$longitudeE7), 1, 3),
".", substr(as.character(latlong2$longitudeE7), 4, 5)))
library(maps)
library(ggplot2)
states <- map_data("state")
p <- ggplot(states) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
theme_bw()
p + geom_point(data = latlong2, aes(x = longR, y = latR),
alpha = .01, color = "red", size = 3)
p <- ggplot(states) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
theme_blank()
p + geom_point(data = latlong2, aes(x = longR, y = latR),
alpha = .01, color = "red", size = 3)
library(ggthemes)
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
p <- ggplot(states) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
theme_foundation()
p + geom_point(data = latlong2, aes(x = longR, y = latR),
alpha = .01, color = "red", size = 3)
source_gist('https://gist.github.com/3711166.git')
library(devtools)
source_gist('https://gist.github.com/3711166.git')
source_gist('https://gist.github.com/3711166')
p <- ggplot(states) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
new_theme_empty()
p + geom_point(data = latlong2, aes(x = longR, y = latR),
alpha = .01, color = "red", size = 3)
new_theme_empty
p <- ggplot(states) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
theme_bw() +
theme(axis.text = element_blank(), line = element_blank(),
rect = element_blank(), axis.title = element_blank())
p + geom_point(data = latlong2, aes(x = longR, y = latR),
alpha = .01, color = "red", size = 3)
head(latlong)
library(knitr)
setwd("C:/Users/bleb/Copy/lebebr01.github.io/_posts")
knit("C:/Users/bleb/Copy/lebebr01.github.io/Rmd/2014-09-26-googleLocations.Rmd")
knit("C:/Users/bleb/Copy/lebebr01.github.io/Rmd/2014-09-26-googleLocations.Rmd")
knit("C:/Users/bleb/Copy/lebebr01.github.io/Rmd/2014-09-26-googleLocations.Rmd")
knit("C:/Users/bleb/Copy/lebebr01.github.io/Rmd/2014-09-26-googleLocations.Rmd")
knit("C:/Users/bleb/Copy/lebebr01.github.io/Rmd/2014-09-26-googleLocations.Rmd")
